var en = function(n, ord) {
  var s = String(n).split('.'), v0 = !s[1], t0 = Number(s[0]) == n,
      n10 = t0 && s[0].slice(-1), n100 = t0 && s[0].slice(-2);
  if (ord) return (n10 == 1 && n100 != 11) ? 'one'
      : (n10 == 2 && n100 != 12) ? 'two'
      : (n10 == 3 && n100 != 13) ? 'few'
      : 'other';
  return (n == 1 && v0) ? 'one' : 'other';
};
var select = function(value, data) {
  if ({}.hasOwnProperty.call(data, value)) return data[value];
  return data.other;
};
var number = function (value, name, offset) {
  if (!offset) return value;
  if (isNaN(value)) throw new Error('Can\'t apply offset:' + offset + ' to argument `' + name +
                                    '` with non-numerical value ' + JSON.stringify(value) + '.');
  return value - offset;
};
var plural = function(value, offset, lcfunc, data, isOrdinal) {
  if ({}.hasOwnProperty.call(data, value)) return data[value];
  if (offset) value -= offset;
  var key = lcfunc(value, isOrdinal);
  if (key in data) return data[key];
  return data.other;
};

window.translations = {
  _: {
    name: function(d) { return "en"; }
  },
  activationRequest: {
    title: function(d) { return "Welcome to Chaport!"; },
    subtitlePasswordOnly: function(d) { return "Please create your password to complete account activation:"; },
    subtitleNameOnly: function(d) { return "Please indicate your name. Your website visitors will see it in the widget under your photo:"; },
    subtitleBoth: function(d) { return "Please create your password and fill out the fields below to complete account activation:"; },
    errorPasswordsMismatch: function(d) { return "Passwords do not match"; },
    errorEmptyFields: function(d) { return "All fields are required"; },
    labelName: function(d) { return "Name"; },
    labelPassword: function(d) { return "Password"; },
    labelConfirmPassword: function(d) { return "Confirm password"; },
    buttonSubmit: function(d) { return "Activate Account"; },
    loading: function(d) { return "Loading..."; },
    invalidCode: function(d) { return "This activation code is not working: either your account has already been activated, or there is a typo in your code."; },
    emailResend: function(d) { return "Send activation email again"; },
    emailResendWait: function(d) { return "Send again in " + d.time; },
    alertSuccessText: function(d) { return "Welcome to Chaport!"; },
    invitation: {
      subtitlePasswordOnly: function(d) { return "Please create your password:"; },
      subtitleBoth: function(d) { return "Please create your password and fill out the fields below:"; },
      buttonSubmit: function(d) { return "Continue"; },
      emailResend: function(d) { return "Resend invitation"; },
      sent: function(d) { return "Invitation sent"; }
    }
  },
  affiliates: {
    redirect: function(d) { return "Redirecting to <a href=\"" + d.url + "\">www.chaport.com</a>..."; }
  },
  alerts: {
    noSeatsAvailable: function(d) { return "No free seats. Your status will be automatically set to \"" + d.status + "\" when there is a seat available."; },
    connectionFailed: function(d) { return "Connection Failed."; },
    reconnecting: function(d) { return "Reconnecting..."; },
    connecting: function(d) { return "Connecting..."; },
    connectionRestored: function(d) { return "Successfully reconnected"; },
    pleaseWait: function(d) { return "Please wait. Reloading..."; },
    updated: function(d) { return "Application has been successfully updated. Reloading..."; },
    genericError: function(d) { return "Error. Try refreshing the page."; },
    genericWarning: function(d) { return "Error. Try refreshing the page."; },
    genericFatal: function(d) { return "Error. Try refreshing the page."; },
    internalError: function(d) { return "Internal error"; },
    uploadAborted: function(d) { return "Upload failed due to a lost network connection."; },
    reloadLink: function(d) { return "Reload"; },
    reconnectLink: function(d) { return "Reconnect"; },
    sessionExpired: function(d) { return "Your session expired, please login again."; },
    uploadTooLarge: function(d) { return "File size is limited to " + select(d.size, { undefined: "10", other: d.size }) + "MB."; }
  },
  appearance: {
    chatButtonColor: function(d) { return "Chat widget color"; },
    customColor: function(d) { return "Custom color"; },
    bgImage: function(d) { return "Background image"; },
    positionLeft: function(d) { return "Position left"; },
    textStatuses: function(d) { return "Display message statuses as text"; },
    teamName: function(d) { return "Team name"; },
    botName: function(d) { return "Bot name"; },
    onlineWelcome: function(d) { return "Online greeting text"; },
    offlineWelcome: function(d) { return "Offline greeting text"; },
    widgetSound: function(d) { return "Widget message sound"; },
    emailRequest: function(d) { return "Email request form"; },
    requestEmailWhenOnline: function(d) { return "Request an email address even when operators are online"; },
    requestPrivacyPolicyAgreement: function(d) { return "Request agreement to the Privacy Policy"; },
    privacyPolicyUrl: function(d) { return "Privacy policy URL"; },
    preview: function(d) { return "Preview"; },
    logo: function(d) { return "Logo"; },
    addLogo: function(d) { return "Add Logo"; },
    changeLogo: function(d) { return "Change Logo"; },
    deleteLogo: function(d) { return "Delete Logo"; },
    logoTooltip: function(d) { return "Upload your company logo (like on your website) so that we can display it in your FAQ portal, email notifications, and other places."; },
    logoFormatError: function(d) { return "Unsupported file format. Accepted logo formats are: jpg, png."; },
    logoUploadError: function(d) { return "Failed to upload an image"; }
  },
  assignmentRules: {
    defaultName: function(d) { return "Assignment Rule"; },
    newAccessWarning: function(d) { return "To get access to assignment rules, " + d.line + "."; },
    note: function(d) { return "Assign chats to operators or teams automatically by rules."; },
    orderExplanation: function(d) { return "The higher a rule is in the list, the higher its priority."; },
    addNewRule: function(d) { return "+ Add assignment rule"; },
    newTitle: function(d) { return "New Assignment Rule"; },
    editTitle: function(d) { return "Edit Assignment Rule"; },
    name: function(d) { return "Name"; },
    namePlaceholder: function(d) { return "E.g., \"Assign to Sales\""; },
    assignTo: function(d) { return "Assign&nbsp;to"; },
    assignToDefault: function(d) { return "Choose operator or team..."; },
    when: function(d) { return "When"; },
    whenVisitorStartsChat: function(d) { return "Visitor starts a chat"; },
    active: function(d) { return "Active"; },
    "if": function(d) { return "If"; },
    deleteAssignmentRule: function(d) { return "Delete Assignment Rule"; },
    deleteWarning: function(d) { return "Are you sure you want to delete this assignment rule?"; }
  },
  autoInvitations: {
    defaultName: function(d) { return "Auto-Invitation"; },
    newAccessWarning: function(d) { return "To get access to auto-invitations, " + d.line + "."; },
    addAutoInvitation: function(d) { return "+ Add auto-invitation"; },
    newAutoInvitation: function(d) { return "New Auto-Invitation"; },
    editAutoInvitation: function(d) { return "Edit Auto-Invitation"; },
    name: function(d) { return "Name"; },
    namePlaceholder: function(d) { return "E.g., \"Help offer\" (visible only to you)"; },
    send: function(d) { return "Send"; },
    messageText: function(d) { return "Message Text"; },
    when: function(d) { return "When"; },
    active: function(d) { return "Active"; },
    "if": function(d) { return "If"; },
    addCondition: function(d) { return "+ Add condition"; },
    deleteAutoInvitation: function(d) { return "Delete Auto-Invitation"; },
    inviteWhen: function(d) { return "Invite when"; },
    initialAutoInvitationMessage: function(d) { return "Hey! How can I help you?"; },
    deleted: function(d) { return "Deleted"; },
    deleteWarning: function(d) { return "Are you sure you want to delete this auto-invitation?"; },
    joiners: {
      and: function(d) { return "and"; },
      or: function(d) { return "or"; }
    },
    matchers: {
      equal_to: function(d) { return "="; },
      not_equal_to: function(d) { return "≠"; },
      contains: function(d) { return "Contains"; },
      does_not_contain: function(d) { return "Does not contain"; },
      greater_than: function(d) { return ">"; },
      less_than: function(d) { return "<"; }
    },
    operatorsOnlineOptions: {
      online: function(d) { return "Operators are Online"; },
      offline: function(d) { return "Operators are Offline"; },
      any: function(d) { return "Does not matter if operators are Online"; }
    },
    parameters: {
      page_url: function(d) { return "Page URL"; },
      referrer_url: function(d) { return "Referrer URL"; },
      message_text: function(d) { return "Message Text"; },
      time_on_page: function(d) { return "Time on Page"; },
      time_on_site: function(d) { return "Time on Site"; },
      page_views: function(d) { return "Page Views"; },
      time_after_close: function(d) { return "Time After Closing Widget"; },
      country: function(d) { return "Country"; },
      language: function(d) { return "Language"; },
      widget_state: function(d) { return "Widget State"; }
    },
    units: {
      sec: function(d) { return "sec."; }
    }
  },
  bot: {
    ecwidWelcomeFull: function(d) { return "Your Ecwid account has been successfully integrated with Chaport!\n\nJust check it out on your website now: " + d.storeUrl; },
    ecwidWelcomeShort: function(d) { return "Your Ecwid account has been successfully integrated with Chaport!"; },
    shopifyWelcome: function(d) { return "Your Shopify account has been successfully connected to Chaport!\n\nTo finish the integration just enable it in your Shopify theme" + select(d.deeplink, { undefined: "", null: "", other: ": " + d.deeplink }) + "."; }
  },
  buttons: {
    done: function(d) { return "Done"; },
    save: function(d) { return "Save"; },
    back: function(d) { return "Back"; },
    send: function(d) { return "Send"; },
    copy: function(d) { return "Copy"; },
    verify: function(d) { return "Verify"; },
    "continue": function(d) { return "Continue"; },
    finish: function(d) { return "Finish"; },
    close: function(d) { return "Close"; },
    cancel: function(d) { return "Cancel"; },
    "delete": function(d) { return "Delete"; },
    edit: function(d) { return "Edit"; },
    authorize: function(d) { return "Authorize"; },
    continueAs: function(d) { return "Continue as " + d.userName; },
    deny: function(d) { return "Deny"; },
    details: function(d) { return "Details"; },
    goOnline: function(d) { return "Set status to \"Online\""; },
    keepAway: function(d) { return "Keep status \"Away\""; },
    learnMore: function(d) { return "Learn more"; },
    moreActions: function(d) { return "More actions"; },
    add: function(d) { return "Add"; }
  },
  cancellationFeedback: {
    defaultTitle: function(d) { return "We’re sad to see you go…"; },
    defaultSubtitle: function(d) { return "Before you proceed, please let us know the reason you’re leaving. Every bit of feedback helps!"; },
    modalCloseText: function(d) { return "Nevermind, I don't want to leave"; },
    tooltip: function(d) { return "Please choose a reason you're leaving"; },
    reasons: {
      technical: function(d) { return "Technical issues"; },
      missingFeatures: function(d) { return "Missing features I need"; },
      switching: function(d) { return "Switching to another product"; },
      shuttingDown: function(d) { return "Shutting down the company"; },
      pricing: function(d) { return "Too expensive"; },
      pausingPayments: function(d) { return "Pausing payments"; },
      other: function(d) { return "Other (please explain below)"; },
      textareaFieldPlacehodler: function(d) { return "Anything you want to share? (Optional)"; }
    }
  },
  chat: {
    you: function(d) { return "You"; },
    toYou: function(d) { return "you"; },
    whomYou: function(d) { return "you"; },
    deactivatedOperatorTransfer: function(d) { return "Can't transfer a chat to a deactivated operator"; },
    deactivatedOperatorInvite: function(d) { return "Can't invite a deactivated operator to a chat"; },
    youInvitedSomeoneElse: function(d) { return "You invited " + d.invitee + " to the chat"; },
    youTransferedChat: function(d) { return "You transfered the chat to " + d.recepient; },
    operatorInvitedSomeoneElse: function(d) { return d.inviter + " invited " + d.invitee + " to the chat"; },
    operatorTransferedChat: function(d) { return d.initiator + " transfered the chat to " + d.recepient; },
    operatorBannedVisitor: function(d) { return d.operator + " banned the visitor in chat"; },
    operatorUnbannedVisitor: function(d) { return d.operator + " unbanned the visitor in chat"; },
    operatorEnteredChat: function(d) { return d.operatorName + " entered the chat"; },
    operatorJoinedChat: function(d) { return d.operatorName + " joined the chat"; },
    operatorLeftChat: function(d) { return d.operatorName + " left the chat"; },
    youJoinedChat: function(d) { return "You joined the chat"; },
    youLeftChat: function(d) { return "You left the chat"; },
    youUnassignedTeam: function(d) { return "You unassigned " + d.oldTeamName + " from the chat"; },
    operatorUnassignedTeam: function(d) { return d.operatorName + " unassigned " + d.oldTeamName + " from the chat"; },
    visitorEnteredChat: function(d) { return d.visitorName + " entered the chat"; },
    visitorLeftChat: function(d) { return d.visitorName + " left the chat"; },
    visitorOpenedPage: function(d) { return "Visitor opened the page \"" + d.pageTitle + "\""; },
    emailWillBeSentSoon: function(d) { return "Unless you continue typing,\nyour reply will be sent via email in " + d.seconds + " sec."; },
    subjectChanged: function(d) { return "Subject: \"" + d.value + "\""; },
    titleNotificationMessageReceived: function(d) { return "New message received!"; },
    notificationMessageReceived: function(d) { return "You've received a new message"; },
    notificationChatTransfer: function(d) { return "Chat has been transfered to you"; },
    notificationInvite: function(d) { return "You have been invited to join chat"; },
    notificationFileTransfer: function(d) { return "A file has been sent to you"; },
    notificationDeliveryFailed: function(d) { return "Message delivery failed"; },
    hiddenMessages: function(d) { return "There are some older messages.<br>To get access to chat history older than " + d.days + " days, <a href=\"/" + "#" + "/settings/billing\">upgrade to " + d.planName + "</a>."; },
    botIntro: function(d) { return "Hey! I'm Chaport Bot, and I'll help you get started here.\n\nTry our chat in action by following this link: " + d.landingUrl + "\n\nTo install the chat on your website, go to \"Settings → Installation code\"."; },
    titleNewMessages: function(d) { return plural(d.count, 0, en, { "1": "(1) New message received", other: "(" + number(d.count, "count") + ") New messages received" }); },
    defaultVisitorName: function(d) { return "Visitor " + "#" + d.i; },
    goOnlineToChat: function(d) { return "Go online to chat"; },
    inputMobileJoinLabel: function(d) { return "Start typing to join the chat..."; },
    inputJoinLabel: function(d) { return "Start typing or press enter to join the chat..."; },
    editMessage: function(d) { return "Edit message"; },
    deleteMessage: function(d) { return "Delete message"; },
    deleteMessageConfirm: function(d) { return "Are you sure you want to delete this message?"; },
    lastSeenOnline: function(d) { return "online"; },
    lastSeenRecently: function(d) { return "last seen recently"; },
    lastSeenHoursAgo: function(d) { return "last seen " + plural(d.hours, 0, en, { "1": "1 hour", other: number(d.hours, "hours") + " hours " }) + " ago"; },
    lastSeenTodayAt: function(d) { return "last seen today at " + d.time; },
    lastSeenYesterdayAt: function(d) { return "last seen yesterday at " + d.time; },
    lastSeenDate: function(d) { return "last seen " + d.date; },
    messageNotDelivered: function(d) { return "Not Delivered"; },
    receivedViaEmail: function(d) { return "Sent via email"; },
    fileSent: function(d) { return "File has been sent."; },
    fileUnavailable: function(d) { return "A file " + select(d.name, { undefined: "", other: "\"" + d.name + "\" " }) + "is not available."; },
    fileUploadProgress: function(d) { return "Uploading..."; },
    fileIsTooLarge: function(d) { return "File size is limited to 10MB."; },
    noResultsFound: function(d) { return "No Results Found"; },
    download: function(d) { return "Download"; },
    autoRespondMessage: function(d) { return "I’m a chatbot designed to welcome new Chaport users.\n\nIf you want to test the chatting feature, follow the link above, send a message through the chat widget as a customer, and reply here as an operator.\n\nIf you have any questions, please ask here: https://www.chaport.com/contact-us"; },
    searchGroupAll: function(d) { return "All"; },
    searchGroupFaq: function(d) { return "FAQ"; },
    searchGroupSavedReplies: function(d) { return "Saved replies"; },
    alertUpgradeToUseSavedReplies: function(d) { return "To get access to saved replies and FAQ, <a href=\"/" + "#" + "/settings/billing\">upgrade your account</a>."; },
    alertUpgradeToUseFileTransfer: function(d) { return "To get access to file sending, <a href=\"/" + "#" + "/settings/billing\">upgrade your account</a>."; },
    alertUpgradeToUseEmoji: function(d) { return "To get access to emoji, <a href=\"/" + "#" + "/settings/billing\">upgrade your account</a>."; },
    exports: {
      json: function(d) { return "JSON"; },
      csv: function(d) { return "CSV"; }
    },
    notDeliveredReason: {
      emailBounce: function(d) { return "The user or their mail server opted out of our emails.<br><a target=\"_blank\" href=\"//www.chaport.com\">Read more</a>"; }
    },
    sizes: {
      b: function(d) { return d.number + " B"; },
      kb: function(d) { return d.number + " KB"; },
      mb: function(d) { return d.number + " MB"; }
    },
    transcripts: {
      header: function(d) { return "Conversation with the customer " + d.via + " " + d.channel + ": " + d.chatUrl; },
      visitor: function(d) { return "Visitor"; },
      team: function(d) { return "Team"; },
      activateToRequest: function(d) { return "Activate the account (check your email) to request the transcript."; },
      sent: function(d) { return "The chat transcript has been sent to your email address."; },
      sendFailed: function(d) { return "Failed to send a chat transcript."; }
    }
  },
  chatbots: {
    defaultBotOperatorName: function(d) { return "Bot"; },
    systemBots: function(d) { return "System bots"; },
    customBots: function(d) { return "Custom bots"; },
    emailRequest: function(d) { return "Email Request"; },
    addChatbot: function(d) { return "+ Add chatbot"; },
    addMessage: function(d) { return "Add bot message"; },
    addOption: function(d) { return "Add reply option"; },
    requestInfo: function(d) { return "Request Info"; },
    option: function(d) { return "Option"; },
    draft: function(d) { return "(Draft)"; },
    copy: function(d) { return "(Copy)"; },
    showReplyOptions: function(d) { return "Show reply options"; },
    transferChatToOperator: function(d) { return "Transfer to operator"; },
    transferChatTo: function(d) { return "Transfer to"; },
    anyOperator: function(d) { return "Any operator"; },
    closeChat: function(d) { return "Close chat"; },
    botMessagePlaceholder: function(d) { return "Bot message..."; },
    optionDeleteWarning: function(d) { return "Are you sure you want to delete this option? The branch related to it will also be deleted."; },
    messageDeleteWarning: function(d) { return "Are you sure you want to delete this message? The branch related to it will also be deleted."; },
    chatbotDeleteWarning: function(d) { return "Are you sure you want to delete this chatbot?"; },
    leavingPageConfirmation: function(d) { return "You have unsaved changes. Are you sure you want to leave this page?"; },
    newChatbot: function(d) { return "New chatbot"; },
    editChatbot: function(d) { return "Edit chatbot"; },
    draftChatbot: function(d) { return "New chatbot"; },
    botSettings: function(d) { return "Bot settings"; },
    scenario: function(d) { return "Scenario"; },
    when: function(d) { return "Send when"; },
    chooseAction: function(d) { return "Choose action"; },
    active: function(d) { return "Active"; },
    disableInput: function(d) { return "Disable input"; },
    oncePerUser: function(d) { return "Once per user"; },
    duplicate: function(d) { return "Duplicate"; },
    blankMessage: function(d) { return "Can’t be blank"; },
    scenarioTip: function(d) { return "Tip: Click on a reply option to edit the corresponding branch of the chatbot scenario."; },
    requestInfoTip: function(d) { return "That's how the data request for the \"" + d.fieldName + "\" field will look like. If you need to branch the scenario depending on the selected reply option, add reply options manually."; },
    disableInputTip: function(d) { return "During the execution of the chatbot scenario, a visitor will not be able to send a message and interrupt the scenario."; },
    newAccessWarning: function(d) { return "To get access to all bots, " + d.line + "."; },
    trialLink: function(d) { return "try Chatbots for free"; },
    suggestToRateAChat: function(d) { return "Suggest to rate a chat"; },
    afterClosingTheChat: function(d) { return "After closing the chat"; },
    autoresponder: function(d) { return "Autoresponder"; },
    replyToAVisitorsFirstMessage: function(d) { return "Reply to a visitor's first message"; },
    replyWhenVisitorIsWaiting: function(d) { return "Reply when a visitor is waiting for the first response"; },
    waitingTime: function(d) { return "Waiting time"; },
    alerts: {
      successAutosave: function(d) { return "Saved"; },
      createdSuccessfully: function(d) { return "Chatbot created"; },
      updated: function(d) { return "Chatbot has been updated"; },
      duplicated: function(d) { return "Chatbot has been duplicated"; },
      validationError: function(d) { return "Unable to save chatbot with empty messages or reply options"; },
      attemptDeleteUsedCustomField: function(d) { return "Can't delete a field used by " + d.botList + " " + plural(d.bots, 0, en, { one: "bot", other: "bots" }) + "."; },
      trialActivated: function(d) { return "Chatbots 14-day free trial has been activated"; }
    },
    templates: {
      customerEngagement: {
        name: function(d) { return "Customer Engagement Bot (Template)"; },
        connectToOperator: function(d) { return "Let me connect you to an operator 🙂"; }
      },
      eCommerceBot: {
        name: function(d) { return "E-Commerce Bot (Template)"; },
        optionHelpMeChooseProduct: function(d) { return "Help me choose a product"; },
        optionSpecialOffers: function(d) { return "Special offers"; },
        optionShipping: function(d) { return "Shipping"; },
        optionCheckOrderStatus: function(d) { return "Check order status"; },
        optionProductReturn: function(d) { return "Product return"; },
        returnWithin30Days: function(d) { return "You can return any product within 30 days!"; },
        connectToOurSalesTeam: function(d) { return "Let me connect you to our Sales Team. They'll be able to help you choose the right product! 🙂"; },
        worldwideShipping: function(d) { return "We provide worldwide shipping!"; },
        moreInformation: function(d) { return "You can find more information about our shipping terms on the \"Shipping Terms\" page."; },
        toCheckYourOrderStatus: function(d) { return "To check your order status, log in to your account, choose \"My orders\", and click on \"Order status\" next to your order."; },
        optionInitiateReturnProcess: function(d) { return "Initiate return process"; },
        optionIChangedMyMind: function(d) { return "I changed my mind 🙂"; },
        ok: function(d) { return "Ok 😄"; },
        anyQuestions: function(d) { return "If you have any questions, just leave your message in the chat. An operator will get in touch with you soon."; },
        tellMeEmail: function(d) { return "Please tell me your email address."; },
        operatorWillGetInTouchWithYou: function(d) { return "Thank you 🙂 In your message, specify your order number and a reason for return.\n\nAn operator will get in touch with you soon to guide you through the return process."; }
      },
      saaSBot: {
        name: function(d) { return "SaaS Bot (Template)"; },
        areYouAnExistingCustomer: function(d) { return "Are you an existing customer?"; },
        optionIAmExistingCustomer: function(d) { return "Yes, I'm an existing customer"; },
        optionIAmNewCustomer: function(d) { return "No, I'm a new customer"; },
        howCanIHelpYou: function(d) { return "Great! 😃 How can I help you?"; },
        optionChangeEmail: function(d) { return "Change email"; },
        toChangeYourEmail: function(d) { return "To change your email, go to your profile and click on \"Change email\"."; },
        optionResetPassword: function(d) { return "Reset password"; },
        toResetYourPassword: function(d) { return "To reset your password, go to the \"Log in\" page and click on the \"Forgot your password?\" link."; },
        optionReportABug: function(d) { return "Report a bug"; },
        tellMeEmail: function(d) { return "Could you tell me your email address?"; },
        thankYou: function(d) { return "Thank you."; },
        describeTheIssue: function(d) { return "Please describe the issue you experience in detail. A support manager will get in touch with you shortly."; },
        optionRequestFeature: function(d) { return "Request a feature"; },
        leaveYourFeatureRequest: function(d) { return "Please leave your feature request in the chat. Someone from the team will get in touch with you soon."; },
        optionUpgradeAccount: function(d) { return "Upgrade account"; },
        toUpgradeAccount: function(d) { return "To upgrade your account, go to the Billing section and click on \"Upgrade\"."; },
        gladToSeeYou: function(d) { return "Glad to see you on our website! 😃 How can I help you?"; },
        optionPricing: function(d) { return "Pricing"; },
        findCurrentPricing: function(d) { return "You can find our current pricing plans on the Pricing page. If you have any additional questions, just send us a message 🙂"; },
        optionDiscounts: function(d) { return "Discounts"; },
        discussDiscount: function(d) { return "Yes, we provide discounts. Let me connect you to an operator so that you can discuss it in detail."; },
        optionGDPR: function(d) { return "GDPR"; },
        GDPRCompliant: function(d) { return "We are GDPR compliant. More information is available on our GDPR page."; }
      },
      scenarioLead: {
        name: function(d) { return "Lead Generation Bot (Template)"; },
        greetingText: function(d) { return "Hey! 👋 Want to know about our special offers?"; },
        optionAgree: function(d) { return "Yes, please"; },
        optionDisagree: function(d) { return "No, thanks"; },
        contactIfYouHaveQuestions: function(d) { return "Ok 🙂 If you have any questions, just leave your message in the chat. An operator will get in touch with you shortly."; }
      },
      shared: {
        hiCanIHelpYou: function(d) { return "Hi! 👋 How can I help you?"; },
        optionBookADemo: function(d) { return "Book a demo"; },
        optionAskAQuestion: function(d) { return "Ask a question"; },
        optionJustBrowsing: function(d) { return "Just browsing"; },
        tellMeNameAndEmail: function(d) { return "Please tell me your name and email."; },
        operatorWillGetInTouchWithYou: function(d) { return "Thank you 🙂 An operator will get in touch with you soon to schedule the demo."; },
        thatIsGreat: function(d) { return "That's great! 😃"; },
        anyQuestions: function(d) { return "If you have any questions, just leave your message in the chat. An operator will get in touch with you shortly."; },
        iAmJustABot: function(d) { return "I'm sorry, I couldn't help you. I'm just a bot 😔"; },
        optionOther: function(d) { return "Other"; },
        discountOffer: function(d) { return "This week you can get 10% off your first purchase!"; },
        askEmailForCoupon: function(d) { return "Please leave your email address, and we'll send you the coupon."; },
        weWillSendYouTheCouponSoon: function(d) { return "Thank you for providing your email address. We'll send you the coupon soon."; },
        browseAnyQuestions: function(d) { return "If you have any questions, just leave your message in the chat. An operator will get in touch with you shortly."; },
        otherAnyQuestions: function(d) { return "Please leave your question in the chat. An operator will get in touch with you soon."; }
      }
    }
  },
  chats: {
    search: function(d) { return "Search"; },
    open: function(d) { return "Open"; },
    all: function(d) { return "All"; },
    openChatsEmpty: function(d) { return "No open chats"; },
    allChatsEmpty: function(d) { return "No chat history"; },
    searchChatsEmpty: function(d) { return "No chats found"; },
    youAreAlone: function(d) { return "(you are alone now)"; },
    filterAllOperators: function(d) { return "All operators"; },
    filterYours: function(d) { return "My chats"; },
    filterOthers: function(d) { return "Others chats"; },
    filterAll: function(d) { return "All chats"; },
    filterOperatorDeleted: function(d) { return d.name + " (Deleted)"; },
    close: function(d) { return "Close"; },
    reopen: function(d) { return "Reopen"; },
    unassigned: function(d) { return "Unassigned"; },
    banVisitor: function(d) { return "Ban Visitor"; },
    unbanVisitor: function(d) { return "Unban Visitor"; },
    leaveChat: function(d) { return "Leave"; },
    unassignTeam: function(d) { return "Unassign Team"; },
    transferChat: function(d) { return "Transfer"; },
    inviteOperator: function(d) { return "Invite"; },
    exportConversation: function(d) { return "Export"; },
    deleteConversation: function(d) { return "Delete"; },
    confirmDelete: function(d) { return "Type 'DELETE' and press OK in order to delete this chat with all associated visitor information. Warning: this process can't be reversed!"; },
    alertDelete: function(d) { return "To delete the chat, type 'DELETE' in a popup window."; },
    email: function(d) { return "Email"; },
    emailTranscript: function(d) { return "Email Transcript"; },
    noChatSelected: function(d) { return "No Chat Selected"; },
    newAccessVisitorInfoWarning: function(d) { return "To see visitor info, " + d.line; },
    newAccessTeamWarning: function(d) { return "To access teams, " + d.line; },
    infoName: function(d) { return "Name"; },
    infoNamePlaceholder: function(d) { return "+ Add Name"; },
    infoEmail: function(d) { return "Email"; },
    infoEmailPlaceholder: function(d) { return "+ Add Email"; },
    infoPhone: function(d) { return "Phone"; },
    infoPhonePlaceholder: function(d) { return "+ Add Phone"; },
    infoNotes: function(d) { return "Notes"; },
    infoNotesPlaceholder: function(d) { return "+ Add Notes"; },
    infoNotesVisibility: function(d) { return "visible only to operators"; },
    infoTeam: function(d) { return "Team"; },
    infoLanguage: function(d) { return "Language"; },
    infoWebsite: function(d) { return "Website"; },
    infoCart: function(d) { return "Shopping cart"; },
    infoStartPage: function(d) { return "Chat start page"; },
    infoReferrer: function(d) { return "Source"; },
    infoLocation: function(d) { return "Location"; },
    infoUserAgent: function(d) { return "User agent"; },
    infoBrowser: function(d) { return "Browser"; },
    infoOS: function(d) { return "OS"; },
    infoReferrerDirectHit: function(d) { return "Direct visit"; },
    infoVisitorIp: function(d) { return "IP-address"; },
    statusUpdatedAutomaticallyTitle: function(d) { return "Your status has been automatically updated"; },
    statusUpdatedAutomaticallyDescription: function(d) { return "Your status has been automatically set to Away due to a missed chat. Choose status to continue."; },
    consents: {
      marketing: {
        label: function(d) { return "Marketing permission"; },
        yes: function(d) { return "marketing permission"; },
        no: function(d) { return "no marketing permission"; }
      }
    },
    utm: {
      source: function(d) { return "UTM Source"; },
      medium: function(d) { return "UTM Medium"; },
      term: function(d) { return "UTM Term"; },
      campaign: function(d) { return "UTM Campaign"; },
      content: function(d) { return "UTM Content"; }
    }
  },
  confirmationRequest: {
    loadingTitle: function(d) { return "Email address activation"; },
    loadingText: function(d) { return "Processing..."; },
    successTitle: function(d) { return "Email address activation"; },
    successText: function(d) { return "Email address has been successfully activated and it will be used to receive future offline messages."; },
    notFoundTitle: function(d) { return "This activation code is not working"; },
    notFoundText: function(d) { return "Either this email address has already been activated or there is a typo in your code"; },
    errorTitle: function(d) { return "Error"; },
    errorText: function(d) { return "Error occurred while processing the activation request. Please check your internet connection and try again later."; },
    buttonGoToApp: function(d) { return "Go to application"; }
  },
  date: {
    today: function(d) { return "Today"; },
    yesterday: function(d) { return "Yesterday"; },
    formats: {
      date: function(d) { return d.month + " " + d.day + ", " + d.year; },
      time: function(d) { return d.hour + ":" + d.minute; },
      minutes: function(d) { return d.minute + ":" + d.second; },
      day: function(d) { return d.dayOfWeek + ", " + d.month + " " + d.day; },
      dayNum: function(d) { return d.day; },
      weekDay: function(d) { return d.dayOfWeek + " " + d.day; },
      weekDayTime: function(d) { return d.dayOfWeek + " " + d.hour + ":" + d.minute; },
      weekDayName: function(d) { return d.dayOfWeek; }
    },
    monthNames: {
      jan: function(d) { return "January"; },
      feb: function(d) { return "February"; },
      mar: function(d) { return "March"; },
      apr: function(d) { return "April"; },
      may: function(d) { return "May"; },
      jun: function(d) { return "June"; },
      jul: function(d) { return "July"; },
      aug: function(d) { return "August"; },
      sep: function(d) { return "September"; },
      oct: function(d) { return "October"; },
      nov: function(d) { return "November"; },
      dec: function(d) { return "December"; }
    },
    shortMonthNames: {
      jan: function(d) { return "Jan"; },
      feb: function(d) { return "Feb"; },
      mar: function(d) { return "Mar"; },
      apr: function(d) { return "Apr"; },
      may: function(d) { return "May"; },
      jun: function(d) { return "Jun"; },
      jul: function(d) { return "Jul"; },
      aug: function(d) { return "Aug"; },
      sep: function(d) { return "Sep"; },
      oct: function(d) { return "Oct"; },
      nov: function(d) { return "Nov"; },
      dec: function(d) { return "Dec"; }
    },
    shortWeekDayNames: {
      sun: function(d) { return "Sun"; },
      mon: function(d) { return "Mon"; },
      tue: function(d) { return "Tue"; },
      wed: function(d) { return "Wed"; },
      thu: function(d) { return "Thu"; },
      fri: function(d) { return "Fri"; },
      sat: function(d) { return "Sat"; }
    },
    weekDayNames: {
      sun: function(d) { return "Sunday"; },
      mon: function(d) { return "Monday"; },
      tue: function(d) { return "Tuesday"; },
      wed: function(d) { return "Wednesday"; },
      thu: function(d) { return "Thursday"; },
      fri: function(d) { return "Friday"; },
      sat: function(d) { return "Saturday"; }
    }
  },
  downloads: {
    platforms: {
      osx64: function(d) { return "Mac"; },
      win32: function(d) { return "Windows"; },
      ios: function(d) { return "iOS"; },
      android: function(d) { return "Android"; },
      web: function(d) { return "Web-version"; }
    }
  },
  emails: {
    activation: {
      subject: function(d) { return "Verify your account"; },
      welcome: function(d) { return "Verify your account"; },
      activateYourAccount: function(d) { return "Confirm that this is your email address to secure your account by&nbsp;clicking the link below:"; },
      ignoreThisEmail: function(d) { return "Ignore this email if you didn't register at Chaport.com."; },
      activateButton: function(d) { return "Verify account"; },
      utm: function(d) { return "?utm_source=EmailSequence&utm_medium=Email&utm_campaign=activation+EN"; }
    },
    addSeats: {
      subject: function(d) { return "Add more operators"; },
      remind: function(d) { return "This is just a quick reminder that you can always adjust the number of operators in your account. There’s no need to wait until the end of your current subscription. If you need more operators, go to " + d.billingLink + " and click on “Change Plan”, or simply click on the button below."; },
      billing: function(d) { return "Settings → Billing"; },
      addMoreOperators: function(d) { return "Add More Operators"; },
      anyQuestions: function(d) { return "If you have any questions about Chaport, feel free to " + d.contactUsLink + " at any time. We are always here to help!"; },
      utm: function(d) { return "?utm_source=EmailSequence&utm_medium=Email&utm_campaign=addSeats+EN"; }
    },
    autoReplies: {
      subject: function(d) { return "Unable to process your email"; },
      automaticReply: function(d) { return "This is an automatic reply."; },
      messages: {
        usedForNotifications: function(d) { return "This email address is used to send message notifications, but it is unable to forward your message to a recepient unless you reply to a specific email."; },
        replyToOriginalEmail: function(d) { return "In order to direct your message to an intended recepient, please find an original email you received from messages@mail.chaport.help and reply to that email instead."; },
        contactUsIfNeedHelp: function(d) { return "If you are still unable to send your message and need assistance, please contact our support at info@chaport.com."; }
      }
    },
    autoresponder: {
      intro: function(d) { return "Introducing Autoresponder"; },
      text: function(d) { return "Send auto-replies when your operators are busy or offline so you don't miss a single customer."; },
      updatesLink: function(d) { return "https://www.chaport.com/blog/introducing-autoresponder"; },
      utm: function(d) { return "?utm_source=Newsletter&utm_medium=Email&utm_campaign=Autoresponder+EN"; }
    },
    blackFriday: {
      subject: function(d) { return "⚡️ Black Friday: 50% off all Chaport plans"; },
      intro: function(d) { return "Get 50% off Chaport Live Chat"; },
      text: function(d) { return "Log in to your Chaport account and get 50% off your first payment of a monthly or an annual " + d.linkText + " subscription using the " + d.bStart + "BLACKFRIDAY2023" + d.bEnd + " coupon code."; },
      pricingLinkText: function(d) { return "paid plan"; },
      pricingLink: function(d) { return "https://www.chaport.com/pricing"; },
      getThisDeal: function(d) { return "Get 50% Discount →"; },
      whyGetChaport: function(d) { return "Why get Chaport " + d.planName1 + " / " + d.planName2 + "?"; },
      getDiscount: function(d) { return "Save 50% Now →"; },
      offerExpires: function(d) { return "The offer expires on Dec 1, 11:59 PM EST"; },
      availableToNewUsers: function(d) { return ", and is only available for new users and Free plan subscribers who have never been on a paid plan before."; },
      utm: function(d) { return "?utm_source=Newsletter&utm_medium=Email&utm_campaign=Black+Friday+EN"; },
      endsSoon: {
        subject: function(d) { return "🔔 Final reminder: 50% off all Chaport plans"; },
        intro: function(d) { return "Black Friday is ending soon!"; },
        text1: function(d) { return "Don't miss your chance to get 50% off your first payment of&nbsp;a&nbsp;monthly or annual " + d.linkText + " subscription."; },
        text2: function(d) { return "Log in to your Chaport account and use the&nbsp;" + d.bStart + "BLACKFRIDAY2023" + d.bEnd + " coupon code while subscribing."; },
        useFeatures: function(d) { return "Empower your team with advanced features and boost your sales!"; }
      },
      reasons: {
        "1": function(d) { return d.bStart + "Chatbots" + d.bEnd + ": Offer instant support and generate leads 24/7, even offline."; },
        "2": function(d) { return d.bStart + "Auto-invitations" + d.bEnd + ": Proactively engage visitors, initiate more chats, and drive sales."; },
        "3": function(d) { return d.bStart + "Multi-channel" + d.bEnd + ": Connect your live chat to Facebook, Telegram, and Viber."; },
        "4": function(d) { return d.bStart + "Knowledge base" + d.bEnd + ": Create a help center and activate an FAQ bot for automated article suggestions."; },
        "5": function(d) { return d.bStart + "Teams & assignment rules" + d.bEnd + ": Organize operators into groups and create rules for automatic chat assignments."; },
        "6": function(d) { return d.bStart + "Saved replies" + d.bEnd + ": Use templates for quick responses to common questions."; },
        "7": function(d) { return d.bStart + "Pre-chat form" + d.bEnd + ": Collect visitor info before starting a chat."; },
        "8": function(d) { return d.bStart + "Typing insights" + d.bEnd + ": See what your visitors are typing before they send messages."; },
        "9": function(d) { return d.bStart + "Chat ratings" + d.bEnd + ": Let your customers rate their chat experience and measure their satisfaction."; },
        "10": function(d) { return d.bStart + "Integrations & API" + d.bEnd + ": Integrate Chaport with third-party apps and services you use."; },
        "11": function(d) { return d.bStart + "And even more!" + d.bEnd; }
      }
    },
    botUsageExhausted: {
      subjectAlmostRunOut: function(d) { return "The number of bot uses on your subscription plan has almost run out"; },
      subjectRunOut: function(d) { return "The number of bot uses on your subscription plan has run out"; },
      headingAlmostRunOut: function(d) { return "The number of bot uses is running out"; },
      headingRunOut: function(d) { return "The number of bot uses has run out"; },
      greeting: function(d) { return "Hi " + d.name + ","; },
      titleAlmostRunOut: function(d) { return "You have already used " + d.value + "% of the bot chats available to you."; },
      titleRunOut: function(d) { return "You have already used all the bot chats available to you this month."; },
      descriptionAlmostRunOut: function(d) { return "Your subscription plan has the following limit: " + d.botLimit + " of bot chats/month. When you reach this limit, chatbots will be disabled. You need to purchase additional operator seats to increase the limit. Each operator seat gives you 1000 bot chats/month."; },
      descriptionRunOut: function(d) { return "You have reached the bot chat limit for your subscription plan (" + d.botLimit + " of bot chats/month), so chatbots have been temporarily disabled. You need to purchase additional operator seats to increase the limit. Each operator seat gives you 1000 bot chats/month."; },
      suggestionAlmostRunOut: function(d) { return "Increase the limit now to continue using chatbots without interruptions."; },
      suggestionRunOut: function(d) { return "Increase the limit now and continue using chatbots."; },
      increaseLimit: function(d) { return "Increase Limit"; },
      utm: function(d) { return "?utm_source=EmailSequence&utm_medium=Email&utm_campaign=botUsageExhausted+EN"; }
    },
    chatRatingsAdvancedReports: {
      intro: function(d) { return "Introducing Chat Ratings and Advanced Reports"; },
      introFormatted: function(d) { return "Introducing Chat Ratings and Advanced Reports"; },
      text: function(d) { return "Track customer satisfaction with a post-chat survey and analyze your team's performance with new reports broken down by operator on daily averages, response times, and more."; },
      updatesLink: function(d) { return "https://www.chaport.com/blog/introducing-chat-ratings-and-advanced-reports"; },
      utm: function(d) { return "?utm_source=Newsletter&utm_medium=Email&utm_campaign=Chat+Ratings+And+Advanced+Reports+EN"; }
    },
    chatTranscript: {
      heading: function(d) { return "Below is the requested transcript of the chat with " + d.name + ":"; },
      subject: function(d) { return d.name + ": chat transcript"; },
      subjectWithEmail: function(d) { return d.name + " (" + d.email + "): chat transcript"; }
    },
    chatbots: {
      learnMore: function(d) { return "Learn More"; },
      chatbots: function(d) { return "Introducing Chatbots"; },
      chatbotsText: function(d) { return "Let bots answer common questions and generate qualified leads. Offer instant help 24/7 and reduce operator workload."; },
      updatesLink: function(d) { return "https://www.chaport.com/blog/introducing-chatbots"; },
      utm: function(d) { return "?utm_source=Newsletter&utm_medium=Email&utm_campaign=Chatbots+EN"; }
    },
    chatsDecrease: {
      subject: function(d) { return "The number of chats you receive has decreased by " + d.percentage + "%."; },
      warning: function(d) { return "Decrease in chats number"; },
      greeting: function(d) { return "Hi " + d.ownerName + ","; },
      heading: function(d) { return "The number of chats you receive has&nbsp;decreased&nbsp;by&nbsp;" + d.percentage + "%."; },
      causes: function(d) { return "Most likely, it was caused by downgrading to the Free plan and disabling " + d.features + ", which initiate most of the chats. You may see the decrease in the following chart:"; },
      triggers: function(d) { return "auto-invitations"; },
      bots: function(d) { return "chatbots"; },
      explanation: function(d) { return "During the last " + d.numDaysPro + " days of using the " + d.planName + " plan, on average, you had been receiving <b>" + plural(d.numChatsPerDayPro, 0, en, { "1": "1&nbsp;chat", other: number(d.numChatsPerDayPro, "numChatsPerDayPro") + "&nbsp;chats" }) + "&nbsp;per&nbsp;day</b>, and after switching to the Free plan, this number&nbsp;dropped to <b>" + plural(d.numChatsPerDayFree, 0, en, { "1": "1&nbsp;chat", other: number(d.numChatsPerDayFree, "numChatsPerDayFree") + "&nbsp;chats" }) + "&nbsp;per&nbsp;day</b>. The total number of chats <b>decreased&nbsp;by&nbsp;" + d.percentage + "%</b>."; },
      goToPro: function(d) { return "You can upgrade to a paid plan and increase the number of incoming chats by activating auto-invitations and chatbots, and get access to many other useful features."; },
      labelChatsCountAutoInv: function(d) { return "#" + " of chats initiated by auto-invitations"; },
      labelChatsCountIncoming: function(d) { return "#" + " of chats initiated by visitors"; },
      renewButton: function(d) { return "Upgrade to a Paid Plan"; },
      utm: function(d) { return "?utm_source=EmailSequence&utm_medium=Email&utm_campaign=chatsDecrease+EN"; }
    },
    faq: {
      intro: function(d) { return "Introducing Knowledge Base and FAQ Bot"; },
      introFormatted: function(d) { return "Introducing Knowledge Base \nand FAQ Bot"; },
      text: function(d) { return "Create a help center for your customers and automatically answer their FAQs whenever they contact you."; },
      updatesLink: function(d) { return "https://www.chaport.com/blog/introducing-knowledge-base-and-faq-bot"; },
      utm: function(d) { return "?utm_source=Newsletter&utm_medium=Email&utm_campaign=FAQ+EN"; }
    },
    featureTrialAlmostEnded: {
      subject: function(d) { return "Feature trial is expiring in " + plural(d.daysLeft, 0, en, { "1": "1 day", other: number(d.daysLeft, "daysLeft") + " days" }); },
      notify: function(d) { return "Your feature trial is expiring"; },
      greeting: function(d) { return "Hi " + d.name + ","; },
      trialExpiring: function(d) { return "Your feature trial is expiring in " + plural(d.daysLeft, 0, en, { "1": "1 day", other: number(d.daysLeft, "daysLeft") + " days" }) + "."; },
      featuresDisabled: function(d) { return "The following features will be disabled:"; },
      defaultFeatureDisabledLine: function(d) { return d.featureName + " will be disabled."; },
      usingWithoutInterruptions: function(d) { return "Upgrade to " + d.fullPlanName + " to continue using " + plural(d.featureCount, 0, en, { "1": "this feature", other: "these features" }) + " without interruptions."; },
      upgradeToPlan: function(d) { return "Upgrade to " + d.planName; },
      utm: function(d) { return "?utm_source=EmailSequence&utm_medium=Email&utm_campaign=featureTrialAlmostEnded+EN"; }
    },
    featureTrialEnded: {
      subject: function(d) { return "Feature trial has ended"; },
      notify: function(d) { return "14-day feature trial has ended"; },
      greeting: function(d) { return "Hi " + d.name + ","; },
      trialEnded: function(d) { return "Your feature trial has ended."; },
      defaultFeatureDisabledLine: function(d) { return d.featureName + " " + select(d.category, { S: "has", other: "have" }) + " been disabled."; },
      featuresDisabled: function(d) { return "The following features have been disabled:"; },
      getFeaturesBack: function(d) { return "Upgrade to " + d.fullPlanName + " and get " + plural(d.featureCount, 0, en, { "1": "this feature", other: "these features" }) + " back!"; },
      upgradeToPlan: function(d) { return "Upgrade to " + d.planName; },
      utm: function(d) { return "?utm_source=EmailSequence&utm_medium=Email&utm_campaign=featureTrialEnded+EN"; }
    },
    footer: {
      copyright: function(d) { return "©"; },
      llc: function(d) { return "Chaport Inc."; },
      address: function(d) { return "2112 Chestnut St, Suite 114, Alhambra, CA 91803, USA"; },
      unsubscribe: function(d) { return "Unsubscribe"; },
      gotoNotificationsSettings: function(d) { return "You can disable these email notifications in <a class=\"underline\" href=\"https://app.chaport.com/" + "#" + "/settings/general\" target=\"_blank\">Settings</a>"; },
      gotoNotificationsSettingsText: function(d) { return "You can disable these email notifications in Settings: https://app.chaport.com/" + "#" + "/settings/general"; }
    },
    forgotDisablingForwarding: {
      subject: function(d) { return "[Action Required] Disable email forwarding"; },
      deletedIntegrationText1: function(d) { return "You deleted " + d.publicEmailAddress + " mailbox integration some time ago, but apparently your mailbox is still forwarding your emails to Chaport."; },
      deletedIntegrationText2: function(d) { return "You need to " + d.disableForwardingLink + " in settings of your email account to make sure that emails sent to this mailbox are no longer forwarded to Chaport."; },
      disableForwardingLink: function(d) { return "disable the forwarding"; },
      upgradingLink: function(d) { return "upgrading your account"; },
      preferRestoring: function(d) { return "If instead you'd prefer restoring the mailbox integration, please let us know in chat or by replying to this email."; },
      configuredButNoAccess1: function(d) { return "You have " + d.publicEmailAddress + " mailbox integration configured, and your incoming emails are being forwarded to Chaport."; },
      configuredButNoAccess2: function(d) { return "However, as your current plan doesn't have access to this integration these emails are being ignored."; },
      configuredButNoAccess3: function(d) { return "Unless you intend " + d.upgradingLink + " in the future, please make sure to " + d.disableForwardingLink + " in settings of your email account."; }
    },
    gdprEmail: {
      subject: function(d) { return "Want to stay GDPR compliant?"; },
      stayGDPRCompliant: function(d) { return "If your company is located in the EU or you work with the European market, then the GDPR applies to you. Let me share some tips that can help you stay GDPR compliant."; },
      DPA: function(d) { return "Sign a Data Processing Addendum"; },
      addLegal: function(d) { return "Add a legal text"; },
      requestMarketingPermission: function(d) { return "Automatically request marketing permission"; },
      anyQuestions: function(d) { return "If you have any questions, feel free to contact me anytime. I'll be happy to help you!"; },
      utm: function(d) { return "?utm_source=EmailSequence&utm_medium=Email&utm_campaign=gdprEmail+EN"; },
      tips: {
        "1": function(d) { return d.bStart + "Tip 1" + d.bEnd + ": Mention " + d.chaportLink + " in your Privacy Policy and make sure it’s clearly explained to your customers how you process their personal data with Chaport Live Chat."; },
        "2": function(d) { return d.bStart + "Tip 2" + d.bEnd + ": " + d.DPALink + " (DPA) with us if your company is located in the EU."; },
        "3": function(d) { return d.bStart + "Tip 3" + d.bEnd + ": " + d.addLegalTextLink + " to the chat widget to inform your customers about how you process their personal data."; },
        "4": function(d) { return d.bStart + "Tip 4" + d.bEnd + ": " + d.requestMarketingPermissionLink + " if you want to use the emails of your customers for marketing purposes."; }
      }
    },
    informCustomers: {
      subject: function(d) { return "Discover the capabilities you might have missed!"; },
      notify: function(d) { return "I noticed you don't use some of the " + d.fullPlanName + " features that are included in your subscription plan. So, I decided to compile a list of useful features for you to make sure you don't miss something important."; },
      initiateMoreConversationsLink: function(d) { return "Initiate more conversations"; },
      knowledgeBase: function(d) { return "knowledge base"; },
      faqBot: function(d) { return "FAQ bot"; },
      groups: function(d) { return "groups"; },
      rules: function(d) { return "rules"; },
      beforeStartingChatLink: function(d) { return "before starting a chat"; },
      afterTheyContactYouLink: function(d) { return "after they contact you"; },
      answerTemplatesLink: function(d) { return "answer templates"; },
      workingHoursLink: function(d) { return "working hours"; },
      autoresponder: function(d) { return "autoresponder"; },
      chatRatings: function(d) { return "rate chats"; },
      useJsApi: function(d) { return "You can also use our " + d.jsApiLink + " to integrate Chaport with your website and third-party apps more closely."; },
      weTryToHelp: function(d) { return "If you want to achieve something specific, but can't find the right feature for it, let me know. I'll try to help!"; },
      jsApiLink: function(d) { return "JavaScript & REST API"; },
      automateLink: function(d) { return "Automate"; },
      additionalFieldsLink: function(d) { return "additional fields"; },
      utm: function(d) { return "?utm_source=EmailSequence&utm_medium=Email&utm_campaign=informCustomers+EN"; },
      features: {
        autoInvitations: function(d) { return d.bStart + "Auto-invitations" + d.bEnd + ": " + d.initiateMoreConversationsLink + " with your website visitors and increase sales."; },
        chatbots: function(d) { return d.bStart + "Chatbots" + d.bEnd + ": " + d.automateLink + " your sales and support. Help your customers 24/7, even when your team is offline."; },
        faq: function(d) { return d.bStart + "Knowledge Base + FAQ bot" + d.bEnd + ": Create a " + d.knowledgeBaseLink + " and offer self-service to your customers, or activate an " + d.faqBotLink + "."; },
        teams: function(d) { return d.bStart + "Teams and assignment rules" + d.bEnd + ": Organize your operators into " + d.teamsLink + " and create " + d.assignmentRulesLink + " for automatic chat assignments."; },
        multiChannel: function(d) { return d.bStart + "Multi-channel" + d.bEnd + ": Reply to messages from " + d.facebookLink + ", " + d.viberLink + ", " + d.telegramLink + " in one app."; },
        customFields: function(d) { return d.bStart + "Custom fields" + d.bEnd + ": Create " + d.additionalFieldsLink + " to gather and store more information."; },
        preChatForm: function(d) { return d.bStart + "Pre-chat form" + d.bEnd + ": Request name, email, phone, and marketing permission " + d.beforeStartingChatLink + "."; },
        inChatEmailRequest: function(d) { return d.bStart + "In-chat email request:" + d.bEnd + " Automatically request visitor emails " + d.afterTheyContactYouLink + "."; },
        savedReplies: function(d) { return d.bStart + "Saved replies" + d.bEnd + ": Create " + d.answerTemplatesLink + " to common questions and answer in a few clicks."; },
        workingHours: function(d) { return d.bStart + "Working hours" + d.bEnd + ": Specify your " + d.workingHoursLink + " and turn on the “Status auto-toggle” setting to automatically change your status to Online at the beginning of the day and to Invisible at the end of the day."; },
        autoresponder: function(d) { return d.bStart + "Autoresponder" + d.bEnd + ": Send " + d.autoresponderLink + " when your operators are busy or offline so you don’t miss a single customer."; },
        chatRatings: function(d) { return d.bStart + "Chat ratings" + d.bEnd + ": Ask your customers to " + d.chatRatingsLink + " and see if they are happy with your chat support."; }
      }
    },
    installWidget: {
      subject: function(d) { return "Install the Chaport chat widget on your website"; },
      header: function(d) { return "Install the Chaport chat widget on your website"; },
      requestedToSendEmail: function(d) { return d.senderEmail + " requested us to send this email to you."; },
      embedCode: function(d) { return "You can start using our chat widget on your website by pasting the code below before the </body> tag:"; },
      stillDontKnowHowToInstall: function(d) { return "Still don't know how to install the widget?"; },
      weCanHelp: function(d) { return "That's why we are here! Send us an email to " + d.email + " or chat with us on " + d.site + "."; },
      promoLink: function(d) { return "our website"; },
      promoUrl: function(d) { return "https://www.chaport.com"; },
      websiteAdministrator: function(d) { return "If there is an administrator managing your website, you can also forward them this email. Most likely they'll know what to do!"; },
      ignoreThisEmail: function(d) { return "Please ignore this email if you don't recognize the person above."; },
      ignoreThisEmailYourself: function(d) { return "Please ignore this email if you did not request this code."; },
      plugins: function(d) { return "You can also use our official plugins for " + d.wordpressLink + ", " + d.joomlaLink + " and " + d.ecwidLink + "."; },
      utm: function(d) { return "?utm_source=EmailSequence&utm_medium=Email&utm_campaign=installWidget+EN"; }
    },
    integrationIssue: {
      subject: function(d) { return "Oops! Your " + d.platformName + " integration stopped working 🙁"; },
      greeting: function(d) { return "Hi " + d.name + ","; },
      notify: function(d) { return "Your " + d.platformName + " integration stopped working"; },
      lostAccess: function(d) { return "Chaport has lost access to your \"" + d.channelName + "\" " + d.platformName + " " + d.channelUnit + "."; },
      lostAccessMultiple: function(d) { return "Chaport has lost access to your " + d.platformName + "."; },
      reconnectHtml: function(d) { return "Please go to <a href=\"" + d.link + "\">Settings → Integrations</a> and reconnect this integration to continue using it."; },
      reconnectText: function(d) { return "Please go to " + d.link + " and reconnect this integration to continue using it."; },
      receiveWhy: function(d) { return "You have received this email because you have integrations enabled in your Chaport account."; }
    },
    links: {
      gettingStarted: function(d) { return "https://www.chaport.com/help/getting-started/getting-started-with-chaport"; },
      contactUs: function(d) { return "https://www.chaport.com/contact-us"; },
      signUp: function(d) { return "https://app.chaport.com/" + "#" + "/signup"; },
      triggers: function(d) { return "https://www.chaport.com/help/auto-invitations/auto-invitations"; },
      bots: function(d) { return "https://www.chaport.com/chatbots"; },
      customizeWidget: function(d) { return "https://www.chaport.com/help/chat-widget/customize-the-chat-widget-appearance"; },
      inviteColleagues: function(d) { return "https://www.chaport.com/help/operators/add-an-operator"; },
      codeSnippet: function(d) { return "https://app.chaport.com/" + "#" + "/settings/installation_code"; },
      download: function(d) { return "https://www.chaport.com/download"; },
      facebook: function(d) { return "https://www.chaport.com/help/integrations/integration-with-facebook"; },
      viber: function(d) { return "https://www.chaport.com/help/integrations/integration-with-viber"; },
      telegram: function(d) { return "https://www.chaport.com/help/integrations/integration-with-telegram"; },
      vk: function(d) { return "https://www.chaport.com/help/integrations/integration-with-vk"; },
      teams: function(d) { return "https://www.chaport.com/help/operators/teams"; },
      assignmentRules: function(d) { return "https://www.chaport.com/help/receiving-chats/assignment-rules"; },
      knowledgeBase: function(d) { return "https://www.chaport.com/help/faq/faq"; },
      faqBot: function(d) { return "https://www.chaport.com/help/faq/faq-bot"; },
      savedReplies: function(d) { return "https://www.chaport.com/help/messages/saved-replies"; },
      workingHours: function(d) { return "https://www.chaport.com/help/receiving-chats/working-hours"; },
      customFields: function(d) { return "https://www.chaport.com/help/visitors/custom-fields"; },
      chats: function(d) { return "https://app.chaport.com"; },
      billing: function(d) { return "https://app.chaport.com/" + "#" + "/settings/billing"; },
      search: function(d) { return "https://www.chaport.com/help/chats/search"; },
      prechatForm: function(d) { return "https://www.chaport.com/help/chat-widget/pre-chat-form"; },
      apiAppearance: function(d) { return "https://docs.chaport.com/api/js/v1/" + "#" + "appearance"; },
      apiLanguage: function(d) { return "https://docs.chaport.com/api/js/v1/" + "#" + "language"; },
      widgetLink: function(d) { return "https://www.chaport.com/help/chat-widget/open-the-chat-window-by-clicking-on-a-link"; },
      passVisitorInfo: function(d) { return "https://www.chaport.com/help/visitors/pass-available-visitor-info-to-the-chat"; },
      syncChatHistory: function(d) { return "https://www.chaport.com/help/visitors/sync-chat-history-across-devices-for-logged-in-visitors"; },
      hideWidgetWhenOffline: function(d) { return "https://www.chaport.com/help/chat-widget/hide-the-chat-widget-when-all-operators-are-offline"; },
      hideWidgetOnSpecificPages: function(d) { return "https://www.chaport.com/help/chat-widget/hide-the-chat-widget-on-specific-pages"; },
      apiOverview: function(d) { return "https://docs.chaport.com/api/js/v1/?javascript--cq" + "#" + "overview"; },
      emailRequest: function(d) { return "https://www.chaport.com/help/chat-widget/automatic-email-address-request"; },
      apiIntegration: function(d) { return "https://www.chaport.com/blog/new-chaport-api-for-integration-with-chatbots-and-much-more"; },
      chatbotsBlog: function(d) { return "https://www.chaport.com/blog/introducing-chatbots"; },
      chatbotsEditor: function(d) { return "https://app.chaport.com/" + "#" + "/settings/chatbots"; },
      autoresponder: function(d) { return "https://www.chaport.com/help/chat-widget/autoresponder"; },
      chatRatings: function(d) { return "https://www.chaport.com/help/chats/chat-ratings"; }
    },
    newAffiliatePlatform: {
      subject: function(d) { return "[Action Required] Important Changes to Chaport Affiliate Program"; },
      hello: function(d) { return "Hi " + d.name + ","; },
      inform: function(d) { return "We inform you that Chaport’s affiliate program is moving from Paddle to the new platform — FirstPromoter."; },
      paddleRetires: function(d) { return "Starting " + d.bStart + "February 28, 2023" + d.bEnd + ", the " + d.bStart + "Paddle affiliate platform will stop working" + d.bEnd + ", as well as the affiliate links you are currently using. But don't worry: we already transferred all the data about your referred customers and their subscriptions to FirstPromoter."; },
      toContinueDoThis: function(d) { return "To continue using our affiliate program and receiving commissions, please do the following:"; },
      replaceLink: function(d) { return d.bStart + "Replace your old affiliate link" + d.bEnd + " with the new one: " + d.link; },
      setupAccount: function(d) { return "Log in to your " + d.link + " to complete your account setup. Please make sure to sign in using this email address: " + d.email + ". If you haven't used FirstPromoter before, you can use the \"Forgot password?\" link to set your password."; },
      setupAccountLinkText: function(d) { return "FirstPromoter account"; },
      footnote: function(d) { return "Please note: Now commissions are temporarily generated on both Paddle and FirstPromoter, but in March, after Paddle pays all commissions, we will mark these transactions in FirstPromoter as paid. From then on, we will pay commissions ourselves upon request or on the 30th of every month. The minimum payout amount is $100."; },
      anyQuestions: function(d) { return "If you have any questions, don't hesitate to contact us. We'll be happy to help!"; }
    },
    offlineEmailActivation: {
      subject: function(d) { return "Email address activation at Chaport.com"; },
      header: function(d) { return "Email Address Activation"; },
      emailHasBeenSet: function(d) { return d.requestedBy + " has set this email address to receive offline messages from Chaport.com."; },
      otherwiseActivate: function(d) { return "Activate your email address to receive offline messages by clicking the link below:"; },
      ignoreThisEmail: function(d) { return "Ignore this email if you don't recognize the person above or if you just don't want to receive offline messages from Chaport.com."; },
      activateButton: function(d) { return "Activate Email Address"; },
      utm: function(d) { return "?utm_source=EmailSequence&utm_medium=Email&utm_campaign=offlineEmailActivation+EN"; }
    },
    offlineMessage: {
      subject: function(d) { return "Offline message from " + d.visitorName + " <" + d.visitorEmail + ">"; },
      subjectNoEmail: function(d) { return "Offline message from " + d.visitorName; },
      visitorSentOfflineMessage: function(d) { return "A visitor has just sent you an offline message."; },
      openConversation: function(d) { return "To view the entire conversation and reply to this message click the link below:"; },
      replyButton: function(d) { return "Go to conversation page"; },
      dontReplyMessage: function(d) { return "To continue the dialog, go to the " + d.conversationPage + "."; },
      conversationPage: function(d) { return "conversation page"; },
      namedFileSent: function(d) { return "A " + select(d.name, { undefined: "", other: "\"" + d.name + "\" " }) + "file has been sent."; },
      emailAttachment: function(d) { return "[File: " + d.name + "]"; },
      userSentFile: function(d) { return d.name + " sent a " + select(d.fileName, { undefined: "", other: "\"" + d.fileName + "\" " }) + "file."; },
      quoteHeading: function(d) { return "On " + d.day + " " + d.month + " " + d.year + ", at " + d.hour + ":" + d.minute + " UTC, " + d.mailbox + " wrote:"; },
      utm: function(d) { return "?utm_source=EmailSequence&utm_medium=Email&utm_campaign=offlineMessage+EN"; }
    },
    operatorActivation: {
      subject: function(d) { return "You've been invited to Chaport.com"; },
      header: function(d) { return "Welcome to Chaport!"; },
      youHaveBeenInvited: function(d) { return "You've been invited to use Chaport Live Chat by " + d.inviterEmail + "."; },
      activateYourAccount: function(d) { return "Accept the invitation by clicking the link below:"; },
      ignoreThisEmail: function(d) { return "Ignore this email if you do not recognize the inviter."; },
      activateButton: function(d) { return "Accept Invitation"; },
      utm: function(d) { return "?utm_source=EmailSequence&utm_medium=Email&utm_campaign=operatorActivation+EN"; }
    },
    operatorOfflineMessage: {
      subject: function(d) { return "Message from " + d.host; },
      reNoSubject: function(d) { return "Re: No subject"; },
      from: function(d) { return d.name + " from " + d.host; },
      fromNameOnly: function(d) { return d.name; },
      operatorSentOfflineMessage: function(d) { return d.name + " from " + d.host + " has just sent you a message."; },
      utm: function(d) { return "?utm_source=EmailSequence&utm_medium=Email&utm_campaign=operatorOfflineMessage+EN"; }
    },
    passwordReset: {
      subject: function(d) { return "Reset account password at Chaport.com"; },
      greeting: function(d) { return "Hi " + d.name + ","; },
      resetPassword: function(d) { return "We received a request to reset the password for your account."; },
      clickLinkBelow: function(d) { return "If you made this request, click the link below:"; },
      ignoreThisEmail: function(d) { return "Ignore this email if you did not request the password reset."; },
      resetButton: function(d) { return "Reset Password"; },
      utm: function(d) { return "?utm_source=EmailSequence&utm_medium=Email&utm_campaign=passwordReset+EN"; }
    },
    prechatFormIpadViber: {
      subject: function(d) { return "Introducing Pre-chat Form, Custom Fields, and more"; },
      header: function(d) { return "Here’s What’s New"; },
      preheader: function(d) { return "We’re happy to announce Chaport’s new features: Pre-chat Form, Custom Fields, Visitor Info Panel Customization, Integration with Viber, Chaport for iPad, and much more."; },
      learnMore: function(d) { return "Learn More"; },
      download: function(d) { return "Download"; },
      prechat: function(d) { return "Pre-chat Form"; },
      prechatText: function(d) { return "Request name, email, phone and any other visitor information\nbefore starting a chat."; },
      customFields: function(d) { return "Custom Fields"; },
      customFieldsText: function(d) { return "Create your own fields – Company Name, Order Number, etc. Add these fields to the pre-chat form, edit them manually or pass using Javascript API."; },
      visitorInfo: function(d) { return "Visitor Info Panel Customization"; },
      visitorInfoText: function(d) { return "Add new fields, hide or reorder fields in the visitor info panel."; },
      viberIntegration: function(d) { return "Integration with Viber"; },
      viberIntegrationText: function(d) { return "Let your customers contact you via Viber, Facebook Messenger, VK or Telegram.\nRespond from Chaport."; },
      iPad: function(d) { return "Chaport for iPad"; },
      iPadText: function(d) { return "Install Chaport on your iPad and enjoy your work even more."; },
      updatesLink: function(d) { return "https://www.chaport.com/blog/introducing-pre-chat-form-custom-fields-and-more"; },
      multiChannelLink: function(d) { return "https://www.chaport.com/blog/multi-channel-integration-with-viber"; },
      appStoreLink: function(d) { return "https://apps.apple.com/app/chaport-messenger-for-websites/id1141834008" + "#" + "?platform=ipad"; },
      utm: function(d) { return "?utm_source=Newsletter&utm_medium=Email&utm_campaign=Pre-chat+Form+EN"; }
    },
    requestFeedback: {
      subject: function(d) { return "How is your experience with Chaport?"; },
      needFeedback: function(d) { return "You’ve been using Chaport Live Chat for some time now. How is your experience with our software? What do you like? Are there any features you would like to see here in the future? Any feedback is appreciated!"; },
      anyQuestions: function(d) { return "If you have any questions, feel free to contact me anytime. I'll be happy to help you!"; },
      utm: function(d) { return "?utm_source=EmailSequence&utm_medium=Email&utm_campaign=requestFeedback+EN"; }
    },
    shared: {
      greeting: function(d) { return "Hi " + d.name + ","; },
      chaportPromoUrl: function(d) { return "www.chaport.com"; },
      chaportTeamSignature: function(d) { return "— Chaport Team"; },
      chaportTeamEmailName: function(d) { return "Chaport Team"; },
      greetingText: function(d) { return "Hi " + d.name + ","; },
      greetingWithoutNameText: function(d) { return "Hi there,"; },
      signatureOnLetterText: function(d) { return "Kind regards,"; },
      signatureOnLetterFrom: function(d) { return d.operator + ", Customer Success Manager at Chaport"; },
      signatureOnLetterFromChaport: function(d) { return "Chaport Team"; },
      anyQuestions: function(d) { return "If you have any questions, feel free to contact me anytime. I will be happy to answer them and help you achieve your goals."; },
      contactUs: function(d) { return "contact us"; },
      contactUs2: function(d) { return "contact us"; },
      choosePlanText: function(d) { return "Choose plan"; },
      andEvenMore: function(d) { return "And even more!"; },
      featuresAvailableOnPaidPlans: function(d) { return "These features are available on our paid plans."; },
      choosePlan: function(d) { return "You can choose a plan and upgrade your account in " + d.upgradeLink + "."; },
      tipNo: function(d) { return "Tip " + d.number; },
      features: {
        autoResponder: {
          short: function(d) { return "Autoresponder"; },
          category: function(d) { return "S"; }
        },
        bots: {
          short: function(d) { return "Chatbots"; },
          category: function(d) { return "P"; }
        },
        faq: {
          short: function(d) { return "FAQ"; },
          category: function(d) { return "S"; }
        },
        faqBot: {
          short: function(d) { return "FAQ bot"; },
          category: function(d) { return "S"; }
        },
        fileTransfer: {
          short: function(d) { return "File sending"; },
          category: function(d) { return "S"; }
        },
        prechatForm: {
          short: function(d) { return "Pre-chat form"; },
          category: function(d) { return "S"; }
        },
        rating: {
          short: function(d) { return "Chat ratings"; },
          category: function(d) { return "P"; }
        },
        savedReplies: {
          short: function(d) { return "Saved replies"; },
          category: function(d) { return "P"; }
        },
        textSearch: {
          short: function(d) { return "Chat search"; },
          category: function(d) { return "S"; }
        },
        triggers: {
          short: function(d) { return "Auto-invitations"; },
          category: function(d) { return "P"; }
        },
        typingInsights: {
          short: function(d) { return "Typing insights"; },
          category: function(d) { return "P"; }
        },
        workingHours: {
          short: function(d) { return "Working hours"; },
          category: function(d) { return "P"; }
        }
      },
      proFeatures: {
        disabledFeatures: function(d) { return "The following features have been disabled:"; },
        autoInvitations: function(d) { return "Auto-invitations"; },
        chatbotsAndAutoInvitations: function(d) { return "Chatbots and Auto-invitations"; },
        chatbots: function(d) { return "Chatbots"; },
        faq: function(d) { return "Knowledge base & FAQ bot"; },
        kb: function(d) { return "Knowledge base"; },
        teams: function(d) { return "Teams and Assignment Rules"; },
        initiateMostOfChats: function(d) { return "initiate most of chats"; },
        searchAndSavedReplies: function(d) { return "Search & Saved replies"; },
        prechatFormAndReports: function(d) { return "Pre-chat form and Detailed reports"; },
        integrations: function(d) { return "Integrations with Facebook, Viber, Telegram, etc."; },
        omniInbox: function(d) { return "Multi-channel inbox"; },
        visitorInfo: function(d) { return "Visitor info"; },
        typingInsight: function(d) { return "Typing insights"; },
        savedReplies: function(d) { return "Saved replies"; },
        visitorBan: function(d) { return "Visitor ban"; },
        fileSending: function(d) { return "File sending"; },
        API: function(d) { return "API"; },
        unlimitedChatHistory: function(d) { return "Unlimited chat history"; },
        chatHistoryDuration: function(d) { return d.duration + " of chat history"; },
        years: function(d) { return plural(d.years, 0, en, { "1": "1 year", other: number(d.years, "years") + " years" }); },
        days: function(d) { return plural(d.days, 0, en, { "1": "1 day", other: number(d.days, "days") + " days" }); },
        unlimitedOperatorSeats: function(d) { return "Unlimited operator seats"; },
        operatorSeatsNumber: function(d) { return plural(d.seats, 0, en, { "1": "1 operator seat", other: number(d.seats, "seats") + " operator seats" }); },
        seatsNumber: function(d) { return plural(d.seats, 0, en, { "1": "1 seat", other: number(d.seats, "seats") + " seats" }); },
        now: function(d) { return "now"; },
        willBe: function(d) { return "will be"; },
        willBePlural: function(d) { return "will be"; },
        advancedWidgetCustomization: function(d) { return "Advanced widget customization settings"; },
        "default": function(d) { return "default"; },
        andOther: function(d) { return "And other"; },
        andOther2: function(d) { return "And much more…"; },
        proFeatures: function(d) { return "paid features"; },
        planFeatures: function(d) { return d.planName + " features"; }
      }
    },
    shortOfflineMessage: {
      subject: function(d) { return "You have unread chats"; },
      newOfflineMessage: function(d) { return "You have unread messages in Chaport, but all your operators are offline. Open the app to reply."; },
      openApp: function(d) { return "Open Chaport"; }
    },
    stoppedUsing: {
      subject: function(d) { return "Customers are waiting for you!"; },
      notLoggedIn: function(d) { return "I noticed that the chat widget is installed on your website, but you haven't logged in to your account for a while to chat with your customers. Is something wrong?"; },
      doNotHesitateToContactUs: function(d) { return "Don’t hesitate to contact me if you need any help with Chaport Live Chat!"; },
      utm: function(d) { return "?utm_source=EmailSequence&utm_medium=Email&utm_campaign=stoppedUsing+EN"; }
    },
    subscriptionAlmostExpired: {
      subject: function(d) { return "Your paid subscription at Chaport.com is expiring in " + plural(d.daysUntilExpires, 0, en, { "1": "1 day", other: number(d.daysUntilExpires, "daysUntilExpires") + " days" }); },
      warning: function(d) { return "Your subscription is expiring"; },
      greeting: function(d) { return "Hi " + d.ownerName + ","; },
      expiresAt: function(d) { return "Your " + d.fullPlanName + " subscription is expiring in " + plural(d.daysUntilExpires, 0, en, { "1": "1 day", other: number(d.daysUntilExpires, "daysUntilExpires") + " days" }) + "."; },
      considerRenewing: function(d) { return "Renew the subscription by clicking the link below:"; },
      renewButton: function(d) { return "Renew Subscription"; },
      utm: function(d) { return "?utm_source=EmailSequence&utm_medium=Email&utm_campaign=subscriptionAlmostExpired+EN"; }
    },
    subscriptionExpired: {
      subject: function(d) { return "Your paid subscription at Chaport.com has expired"; },
      warning: function(d) { return "Your subscription has expired"; },
      greeting: function(d) { return "Hi " + d.ownerName + ","; },
      subscriptionHasExpired: function(d) { return "Your " + d.fullPlanName + " subscription has just expired."; },
      accountDowngraded: function(d) { return "Your account has been downgraded to the free plan."; },
      historyWillBeClearedOn: function(d) { return "Your chat history older than 30 days will be cleared on " + d.date + " unless you renew your subscription."; },
      considerRenewing: function(d) { return "Renew the subscription by clicking the link below:"; },
      renewButton: function(d) { return "Renew Subscription"; },
      utm: function(d) { return "?utm_source=EmailSequence&utm_medium=Email&utm_campaign=subscriptionExpired+EN"; }
    },
    teams: {
      intro: function(d) { return "Introducing Teams and Assignment Rules"; },
      text: function(d) { return "Organize your operators into groups and create rules for automatic chat assignments."; },
      updatesLink: function(d) { return "https://www.chaport.com/blog/introducing-teams-and-assignment-rules"; },
      utm: function(d) { return "?utm_source=Newsletter&utm_medium=Email&utm_campaign=Teams+EN"; }
    },
    testChaport: {
      subject: function(d) { return "Time to configure your account!"; },
      configureIt: function(d) { return "You created an account at Chaport, which means you are one step closer to " + d.bStart + "increasing your sales" + d.bEnd + "! But I see that you haven’t configured it yet."; }
    },
    testForwarding: {
      subject: function(d) { return "Testing your forwarding settings"; },
      addedMailbox: function(d) { return "You have added " + d.publicEmailAddress + " as a mailbox in Chaport, and we are sending this email to test your forwarding settings. If it arrives to Chaport we'll know the forwarding is set up correctly."; },
      ifNotVerified: function(d) { return "If the forwarding in Chaport is still not verified, please check your Chaport Inbox and see if there's a verification email from your email provider."; },
      followInstructions: function(d) { return "Follow the instructions in that email and then complete the mailbox setup."; },
      needHelp: function(d) { return "Any questions? Reply to this email or let us know in the chat, we are here to help!"; }
    },
    trialAlmostEnded: {
      subject: function(d) { return "Your Chaport trial is expiring in " + plural(d.daysUntilExpires, 0, en, { "1": "1 day", other: number(d.daysUntilExpires, "daysUntilExpires") + " days" }); },
      warning: function(d) { return "Your trial is expiring"; },
      greeting: function(d) { return "Hi " + d.ownerName + ","; },
      expiresAt: function(d) { return "Your " + d.fullPlanName + " trial is expiring in " + plural(d.daysUntilExpires, 0, en, { "1": "1 day", other: number(d.daysUntilExpires, "daysUntilExpires") + " days" }) + "."; },
      accountWillBeDowngraded: function(d) { return "Your account will be downgraded to the free plan."; },
      willBeDisabledFeatures: function(d) { return "The following features will be disabled:"; },
      considerRenewing: function(d) { return "Subscribe to a paid plan now to continue using all the features you need without interruptions:"; },
      utm: function(d) { return "?utm_source=EmailSequence&utm_medium=Email&utm_campaign=trialAlmostEnded+EN"; }
    },
    trialAlmostEndedPlain: {
      subject: function(d) { return "Your Chaport trial ends in " + plural(d.daysUntilExpires, 0, en, { "1": "1 day", other: number(d.daysUntilExpires, "daysUntilExpires") + " days" }) + ". Select a plan to keep using Chaport without interruptions."; },
      expiresAt: function(d) { return "We wanted to inform you that your Chaport trial expires in " + plural(d.daysUntilExpires, 0, en, { "1": "1 day", other: number(d.daysUntilExpires, "daysUntilExpires") + " days" }) + ". " + d.featureCommaNames + ", and other paid features will be disabled."; },
      upgradeToGetFeaturesBack: function(d) { return "Now is a perfect time to " + d.selectPlanLink + " so that you can continue using Chaport without interruptions."; },
      contactUs: function(d) { return "Not sure which plan is right for you? Just " + d.startChatLink + ", and we’ll be happy to help!"; },
      selectPlan: function(d) { return "choose a plan"; },
      startChat: function(d) { return "start a chat with us"; }
    },
    trialEnded: {
      subject: function(d) { return "Your Chaport trial has ended"; },
      warning: function(d) { return "14-day trial has ended"; },
      greeting: function(d) { return "Hi " + d.ownerName + ","; },
      trialEnded: function(d) { return "Your " + d.fullPlanName + " trial has ended."; },
      accountDowngraded: function(d) { return "Your account has been downgraded to the free plan."; },
      pleaseNote: function(d) { return "Please note"; },
      fewerChats: function(d) { return "You can receive significantly fewer chats now as auto-invitations initiate most of them."; },
      considerRenewing: function(d) { return "Continue using Chaport with a paid plan and get all the " + d.planName + " features back:"; },
      renewButton: function(d) { return "Pick a Plan"; },
      utm: function(d) { return "?utm_source=EmailSequence&utm_medium=Email&utm_campaign=trialEnded+EN"; }
    },
    trialEndedPlain: {
      subject: function(d) { return "Your Chaport trial has expired. Select a plan to keep using Chaport without interruptions."; },
      featuresDisabled: function(d) { return "Your Chaport trial has expired. " + d.selectPlanLink + " to continue using all the powerful features:"; },
      comeback: function(d) { return "Select your plan " + d.hereLink + " – get all the tools to automate your customer service and boost sales."; },
      selectPlan: function(d) { return "Select a plan"; },
      here: function(d) { return "here"; }
    },
    tryChatbots: {
      subject: function(d) { return "Try chatbots for free!"; },
      invite: function(d) { return "I would like to invite you to " + d.bStart + "try our chatbots for free" + d.bEnd + ". Using this feature is a great way to improve your efficiency and take your sales and support to the next level."; },
      chatbotsCan: function(d) { return "Chatbots can:"; },
      chatbotsBuild: function(d) { return "In Chaport, you can " + d.postLink + " in minutes thanks to a user-friendly WYSIWYG chatbot builder. Alternatively, you can take advantage of ready-made chatbot templates."; },
      createChatbot: function(d) { return "create a chatbot"; },
      settingsChatbots: function(d) { return "Settings → Chatbots"; },
      trialActivation: function(d) { return "To activate the chatbots trial, go to " + d.activationLink + " and click on the link in the banner at the top of the app."; },
      anyQuestions: function(d) { return "If you have any questions, let me know. I will be happy to help!"; },
      utm: function(d) { return "?utm_source=EmailSequence&utm_medium=Email&utm_campaign=tryChatbots+EN"; },
      features: {
        "1": function(d) { return "Generate and qualify leads by initiating chats and collecting visitor data."; },
        "2": function(d) { return "Save you time by handling common questions."; },
        "3": function(d) { return "Boost sales and conversion by clearing customer doubts at the right moment."; },
        "4": function(d) { return "Increase customer satisfaction by providing quick responses."; },
        "5": function(d) { return "Help your customers 24/7, even when you are offline."; },
        "6": function(d) { return "Transfer chats to operators if questions are difficult."; }
      }
    },
    unableToProcessEmail: {
      subject: function(d) { return "Unable to deliver your email"; },
      unable: function(d) { return "Oops! We were unable to deliver your message to " + d.siteHost + ". Please use the chat widget at " + d.siteHost + " to send your message."; }
    },
    upgradeCustomers: {
      subject: function(d) { return "Get access to all Chaport’s features!"; },
      usefulFeatures: function(d) { return "I see that you didn't have a chance to take advantage of some of the most useful Chaport’s features that can help you generate and qualify more leads, boost sales, and provide outstanding customer service. What keeps you from trying them?"; },
      billing: function(d) { return "Settings → Billing"; },
      featuresAvailable: function(d) { return "These features are available on our " + d.planName + " plan. To change your plan, go to " + d.upgradeLink + " and click on \"Change Plan\"."; },
      upgradeToBusiness: function(d) { return "Upgrade to " + d.planName; },
      tryBeforeUpgrading: function(d) { return "If you want to try these features before upgrading, just " + d.contactUsLink + ", and we’ll activate an additional trial for you."; },
      letUsKnow: function(d) { return "let us know"; },
      utm: function(d) { return "?utm_source=EmailSequence&utm_medium=Email&utm_campaign=upgradeCustomers+EN"; },
      features: {
        bots: function(d) { return d.bStart + "Chatbots" + d.bEnd + ": Automate your sales and support. Help your customers 24/7, even when your team is offline."; },
        faq: function(d) { return d.bStart + "Knowledge Base + FAQ bot" + d.bEnd + ": Create a knowledge base and offer self-service to your customers, or activate an FAQ bot."; },
        teams: function(d) { return d.bStart + "Teams and assignment rules" + d.bEnd + ": Organize your operators into groups and create rules for automatic chat assignments."; },
        seats: function(d) { return d.bStart + "Unlimited operators" + d.bEnd + ": Add as many operators as needed and provide support faster."; },
        customVisitorFields: function(d) { return d.bStart + "Custom fields" + d.bEnd + ": Collect and store more information about your customers."; },
        rating: function(d) { return d.bStart + "Chat ratings" + d.bEnd + ": Ask your customers to rate chats and see if they are happy with your chat support."; },
        responseTimesReport: function(d) { return d.bStart + "Advanced reports" + d.bEnd + ": Measure customer satisfaction, the average response time of your operators, the time they need to close chats, and see how much time operators spend in the live chat helping your customers."; },
        zapier: function(d) { return d.bStart + "Zapier integration" + d.bEnd + ": Connect Chaport to 3,000+ apps and services."; },
        history: function(d) { return d.bStart + "Unlimited chat history" + d.bEnd + ": View all previous conversations at any time."; }
      }
    },
    upgradeFreeCustomers1: {
      subject: function(d) { return "Want to get even more sales?"; },
      fantasticOpportunity: function(d) { return "You installed Chaport Live Chat on your website, which gives you a fantastic opportunity to talk to your website visitors in real time and convert them into paying customers. But what if I say you can " + d.bStart + "get even more sales" + d.bEnd + "?"; },
      bestWayToDoIt: function(d) { return "The best way to do it is to " + d.bStart + "proactively initiate chats" + d.bEnd + " with your website visitors when they need your help. Set up " + d.autoInvitationsLink + " to encourage them to start a conversation with you or activate a " + d.chatbotLink + " that can reach out to your website visitors, qualify leads, and offer help even when you are offline."; },
      autoInvitations: function(d) { return "auto-invitations"; },
      chatbots: function(d) { return "chatbot"; },
      utm: function(d) { return "?utm_source=EmailSequence&utm_medium=Email&utm_campaign=upgradeFreeCustomers1+EN"; }
    },
    upgradeFreeCustomers2: {
      subject: function(d) { return "Make customer communication even more convenient!"; },
      moreConvenientCommunication: function(d) { return "Did you know you can make customer communication even more convenient for you and your colleagues?"; },
      teams: function(d) { return "teams"; },
      assignmentRules: function(d) { return "assignment rules"; },
      search: function(d) { return "search"; },
      preChat: function(d) { return "pre-chat"; },
      customFields: function(d) { return "custom fields"; },
      answerTemplates: function(d) { return "answer templates"; },
      utm: function(d) { return "?utm_source=EmailSequence&utm_medium=Email&utm_campaign=upgradeFreeCustomers2+EN"; },
      features: {
        "1": function(d) { return "Reply to messages from " + d.facebookLink + ", " + d.viberLink + ", " + d.telegramLink + " in one app and stop switching between multiple apps and tabs."; },
        "2": function(d) { return "Organize your operators into " + d.teamsLink + " and create automatic " + d.assignmentRulesLink + "."; },
        "3": function(d) { return "Easily " + d.searchLink + " for previous conversations from any channel."; },
        "4": function(d) { return "Set up a " + d.preChatFormLink + " form to pre-qualify your leads without operator involvement."; },
        "5": function(d) { return "Create " + d.customFieldsLink + " to collect and store information about your customers."; },
        "6": function(d) { return "Prepare " + d.answerTemplatesLink + " to common questions, reply in a few clicks, and save your time."; }
      },
      textFeatures: {
        "1": function(d) { return "Reply to messages from Facebook, Viber, Telegram in one app and stop switching between multiple apps and tabs.\n" + d.facebookLink + "\n" + d.viberLink + "\n" + d.telegramLink; },
        "2": function(d) { return "Organize your operators into teams and create automatic assignment rules.\n" + d.teamsLink + "\n" + d.assignmentRulesLink; },
        "3": function(d) { return "Easily search for previous conversations from any channel.\n" + d.searchLink; },
        "4": function(d) { return "Set up a pre-chat form to pre-qualify your leads without operator involvement.\n" + d.preChatFormLink; },
        "5": function(d) { return "Create custom fields to collect and store information about your customers.\n" + d.customFieldsLink; },
        "6": function(d) { return "Prepare answer templates to common questions, reply in a few clicks, and save your time.\n" + d.answerTemplatesLink; }
      }
    },
    upgradeFreeCustomers3: {
      subject: function(d) { return "Discover more capabilities with Chaport's API"; },
      offersMuchMore: function(d) { return "Did you know that Chaport offers much more than meets the eye? Let me tell you about some of Chaport’s capabilities you might have missed."; },
      youCan: function(d) { return "You can:"; },
      customize: function(d) { return "Customize the chat widget appearance"; },
      language: function(d) { return "language"; },
      openChatWidget: function(d) { return "Open the chat widget"; },
      passAvailableVisitorInfo: function(d) { return "Pass available visitor info"; },
      syncChatHistory: function(d) { return "Sync chat history"; },
      operatorsOffline: function(d) { return "operators are offline"; },
      onSpecificPages: function(d) { return "on specific pages"; },
      andEvenMore: function(d) { return "You can do all these things and even more using " + d.chaportsAPILink + " that is available on our paid plans."; },
      chaportsAPI: function(d) { return "Chaport’s API"; },
      anyQuestions: function(d) { return "If you need any assistance or want to know if we have an API for your specific use case, just let me know. I will be happy to help!"; },
      contactUs: function(d) { return "contact us"; },
      utm: function(d) { return "?utm_source=EmailSequence&utm_medium=Email&utm_campaign=upgradeFreeCustomers3+EN"; },
      features: {
        "1": function(d) { return d.customizeLink + " on a per site/per page basis."; },
        "2": function(d) { return "Set a specific " + d.languageLink + " of the widget or synchronize it with your website languages."; },
        "3": function(d) { return d.openChatWidgetLink + " by clicking on a custom button/link."; },
        "4": function(d) { return d.passAvailableVisitorInfoLink + " to the chat."; },
        "5": function(d) { return d.syncChatHistoryLink + " across devices for logged-in visitors."; },
        "6": function(d) { return "Hide the chat widget when all " + d.operatorsOfflineLink + "."; },
        "7": function(d) { return "Hide the chat widget " + d.onSpecificPagesLink + "."; }
      },
      textFeatures: {
        "1": function(d) { return "Customize the chat widget appearance on a per site/per page basis.\n" + d.customizeLink; },
        "2": function(d) { return "Set a specific language of the widget or synchronize it with your website languages.\n" + d.languageLink; },
        "3": function(d) { return "Open the chat widget by clicking on a custom button/link.\n" + d.openChatWidgetLink; },
        "4": function(d) { return "Pass available visitor info to the chat.\n" + d.passAvailableVisitorInfoLink; },
        "5": function(d) { return "Sync chat history across devices for logged-in visitors.\n" + d.syncChatHistoryLink; },
        "6": function(d) { return "Hide the chat widget when all operators are offline,\n" + d.operatorsOfflineLink; },
        "7": function(d) { return "Hide the chat widget on specific pages.\n" + d.onSpecificPagesLink; }
      }
    },
    upgradeFreeCustomers4: {
      subject: function(d) { return "Get 20% off Chaport’s paid plans"; },
      dontMissYourChance: function(d) { return "Don't miss your chance to get 20% off your first payment of a monthly or an annual Chaport subscription!"; },
      boostYourSales: function(d) { return "Empower your team with the best live chat software and boost your sales!"; },
      getPersonalDiscount: function(d) { return "Contact me to get your personal discount."; },
      getDiscount: function(d) { return "Get discount"; },
      offerValidTill: function(d) { return "The offer is valid till " + d.offerValidTillDate + "."; },
      contactUs: function(d) { return "Contact us"; },
      utm: function(d) { return "?utm_source=EmailSequence&utm_medium=Email&utm_campaign=upgradeFreeCustomers4+EN"; },
      features: {
        "1": function(d) { return "Initiate more conversations with your website visitors."; },
        "2": function(d) { return "Automate your sales and support with chatbots."; },
        "3": function(d) { return "Reply to messages from Facebook, Viber, Telegram in one app."; },
        "4": function(d) { return "Easily search for previous conversations."; },
        "5": function(d) { return "Read visitor messages even before they are sent and answer faster."; },
        "6": function(d) { return "Prepare answer templates to standard visitors' questions, reply in a few clicks, and save your time."; },
        "7": function(d) { return "Integrate Chaport with 3,000+ apps."; },
        "8": function(d) { return "Take advantage of Chaport’s API."; }
      }
    },
    upgradeFreeCustomers5: {
      subject: function(d) { return "Get access to the most powerful features!"; },
      powerfulFeaturesAdvantage: function(d) { return "I see that you didn't have a chance to take advantage of some of the most powerful Chaport’s features."; },
      remindAbout: function(d) { return "Let me remind you about the key features that can help you generate and qualify more leads, boost sales, and provide outstanding customer service:"; },
      utm: function(d) { return "?utm_source=EmailSequence&utm_medium=Email&utm_campaign=upgradeFreeCustomers5+EN"; },
      features: {
        "1": function(d) { return d.bStart + "Auto-invitations" + d.bEnd + ": Initiate more conversations with your website visitors."; },
        "2": function(d) { return d.bStart + "Chatbots" + d.bEnd + ": Automate your sales and support. Help your customers 24/7, even when your team is offline."; },
        "3": function(d) { return d.bStart + "Multi-Channel" + d.bEnd + ": Reply to messages from Facebook, Viber, Telegram in one app."; },
        "4": function(d) { return d.bStart + "Knowledge Base + FAQ bot" + d.bEnd + ": Create a Knowledge Base and offer self-service to your customers, or activate an FAQ bot."; },
        "5": function(d) { return d.bStart + "Teams and assignment rules" + d.bEnd + ": Organize your operators into groups and create rules for automatic chat assignments."; },
        "6": function(d) { return d.bStart + "Pre-chat form" + d.bEnd + ": Collect any visitor info before starting a chat."; },
        "7": function(d) { return d.bStart + "Search" + d.bEnd + ": Easily search for previous conversations."; },
        "8": function(d) { return d.bStart + "Typing insights" + d.bEnd + ": Read visitor messages even before they are sent and answer faster."; },
        "9": function(d) { return d.bStart + "Saved replies" + d.bEnd + ": Prepare answer templates to common questions, reply in a few clicks, and save your time."; },
        "10": function(d) { return d.bStart + "Autoresponder" + d.bEnd + ": Send auto-replies when your operators are busy or offline so you don’t miss a single customer."; },
        "11": function(d) { return d.bStart + "Integrations" + d.bEnd + ": Integrate Chaport with 3,000+ apps."; }
      }
    },
    visitorReturn1: {
      subject: function(d) { return "Let me help you get started with Chaport!"; },
      thankYouForInterest: function(d) { return "Thank you for expressing your interest in our live chat software!"; },
      gettingStartedText: function(d) { return "I'm here to help you get started. Check out the " + d.gettingStartedGuideLink + " to learn how to add Chaport Live Chat to your website in minutes and start boosting your sales."; },
      getStartedLinkText: function(d) { return "Get Started"; },
      gettingStartedGuide: function(d) { return "Getting Started Guide"; },
      utm: function(d) { return "?utm_source=EmailSequence&utm_medium=Email&utm_campaign=visitorReturn1+EN"; }
    },
    visitorReturn2: {
      subject: function(d) { return "You are just one step away from increasing your sales!"; },
      expressedInterest: function(d) { return "You expressed interest in installing Chaport Live Chat on your website not long ago, but I see that you haven't signed up yet."; },
      anyQuestions: function(d) { return "Is there anything that makes you hesitant? Let me know if you have any questions. I will be happy to help you!"; },
      justOneStep: function(d) { return "You are just one step away from increasing your sales and improving your customer support! Just " + d.createAccountLink + " and start chatting with your customers."; },
      createAccountText: function(d) { return "create an account"; },
      contactUs: function(d) { return "Contact us"; },
      utm: function(d) { return "?utm_source=EmailSequence&utm_medium=Email&utm_campaign=visitorReturn2+EN"; }
    },
    visitorReturn3: {
      subject: function(d) { return "What makes you hesitant?"; },
      tryIt: function(d) { return "You were interested in our live chat software, but I see that you haven't signed up to try it out. What makes you hesitant?"; },
      itAllowsYou: function(d) { return "Chaport Live Chat is a perfect tool to generate more leads, increase sales, and improve customer support. It allows you to:"; },
      signUpForFree: function(d) { return "Sign up for free"; },
      signUpText: function(d) { return d.signUpLink + " to try Chaport. No card required."; },
      utm: function(d) { return "?utm_source=EmailSequence&utm_medium=Email&utm_campaign=visitorReturn3+EN"; },
      chaportAllows: {
        "1": function(d) { return "Initiate more conversations with your website visitors."; },
        "2": function(d) { return "Automate your sales and support with chatbots."; },
        "3": function(d) { return "Reply to messages from Facebook, Viber, Telegram in one app."; },
        "4": function(d) { return "Easily search for previous conversations."; },
        "5": function(d) { return "Read visitor messages even before they are sent and answer faster."; },
        "6": function(d) { return "Prepare answer templates to standard visitors' questions, reply in a few clicks, and save your time."; },
        "7": function(d) { return "Integrate your account with 3,000+ apps."; },
        "8": function(d) { return "Download our mobile apps and talk to your customers wherever you are."; }
      }
    },
    welcomeCustomers: {
      subject: function(d) { return "Welcome to " + d.fullPlanName + "!"; },
      thankYou: function(d) { return "Thank you for subscribing to " + d.fullPlanName + "!"; },
      someTips: function(d) { return "Let me share some tips that can help you in your work."; },
      anyQuestions: function(d) { return "If you have any questions, don’t hesitate to contact me anytime. I’ll be happy to help you!"; },
      autoInvitations: function(d) { return "auto-invitations"; },
      chatbots: function(d) { return "chatbots"; },
      teams: function(d) { return "teams"; },
      rules: function(d) { return "rules"; },
      knowledgeBase: function(d) { return "knowledge base"; },
      faqBot: function(d) { return "FAQ bot"; },
      savedReplies: function(d) { return "saved replies"; },
      customFields: function(d) { return "custom fields"; },
      workingHours: function(d) { return "working hours"; },
      autoresponder: function(d) { return "autoresponder"; },
      chatRatings: function(d) { return "chat ratings"; },
      utm: function(d) { return "?utm_source=EmailSequence&utm_medium=Email&utm_campaign=welcomeCustomers+EN"; },
      tips: {
        triggers: function(d) { return "Activate " + d.autoInvitationsLink + " or " + d.chatbotsLink + " to generate more leads."; },
        autoInvitations: function(d) { return "Activate " + d.autoInvitationsLink + " to generate more leads."; },
        omni: function(d) { return "Connect " + d.facebookLink + " and other messengers to Chaport and reply to all chats in one app."; },
        teams: function(d) { return "Divide your operators into " + d.teamsLink + " and create " + d.assignmentRulesLink + " to automate chat assignments."; },
        faq: function(d) { return "Create a " + d.knowledgeBaseLink + " and activate an " + d.faqBotLink + " to provide customer support even when you are offline."; },
        savedReplies: function(d) { return "Create " + d.savedRepliesLink + " to answer faster."; },
        customFields: function(d) { return "Create " + d.customFieldsLink + " to qualify your leads or store additional information."; },
        workingHours: function(d) { return "Specify your " + d.workingHoursLink + " so that you continue to be displayed online when you are available on a mobile device only."; },
        autoresponder: function(d) { return "Activate the " + d.autoresponderLink + " to send auto-replies when your operators are busy or offline, and never miss a customer."; },
        chatRatings: function(d) { return "Enable " + d.chatRatingsLink + " to measure customer satisfaction."; }
      }
    },
    welcomeEmail: {
      subject: function(d) { return "Welcome to Chaport!"; },
      thankYouForJoining: function(d) { return "Thank you for joining Chaport. We are happy to have you here!"; },
      iAm: function(d) { return "I’m " + d.name + ", a Customer Success Manager at Chaport, and I’d love to help you get started. Let me share the most important steps:"; },
      tip: function(d) { return d.bStart + "Tip" + d.bEnd + ": Activating " + d.triggersLink + " or " + d.chatbotsLink + " will help you initiate more conversations with your customers and skyrocket your sales!"; },
      triggers: function(d) { return "auto-invitations"; },
      bots: function(d) { return "chatbots"; },
      anyQuestions: function(d) { return "If you have any questions about Chaport, don’t hesitate to " + d.contactUsLink + " anytime. Our support team will be glad to help you set everything up according to your goals."; },
      customizeWidget: function(d) { return "Customize your live chat widget"; },
      inviteColleagues: function(d) { return "Invite your colleagues"; },
      addCodeSnippet: function(d) { return "add a code snippet"; },
      download: function(d) { return "download mobile & desktop apps"; },
      utm: function(d) { return "?utm_source=EmailSequence&utm_medium=Email&utm_campaign=welcomeEmail+EN"; },
      steps: {
        "1": function(d) { return d.bStart + "Step 1" + d.bEnd + ": " + d.customizeWidgetLink + " to match your brand."; },
        "2": function(d) { return d.bStart + "Step 2" + d.bEnd + ": " + d.inviteColleaguesLink + " to your account."; },
        "3": function(d) { return d.bStart + "Step 3" + d.bEnd + ": Install the widget on your website. Use our plugins for " + d.WordPressLink + ", " + d.JoomlaLink + ", or " + d.EcwidLink + " or simply " + d.addCodeSnippetLink + " before the &lt;/body&gt; tag."; },
        "4": function(d) { return d.bStart + "Step 4" + d.bEnd + ": Chat with your customers! Open Сhaport in your browser or " + d.downloadLink + "."; }
      }
    }
  },
  emoji: {
    people: function(d) { return "People"; },
    nature: function(d) { return "Nature"; },
    objects: function(d) { return "Objects"; },
    places: function(d) { return "Places"; },
    symbols: function(d) { return "Symbols"; }
  },
  faq: {
    addSection: function(d) { return "Add section"; },
    newSection: function(d) { return "New Section"; },
    editSection: function(d) { return "Edit Section"; },
    renameSection: function(d) { return "Rename section"; },
    deleteSection: function(d) { return "Delete section"; },
    addArticle: function(d) { return "Add article"; },
    editArticle: function(d) { return "Edit Article"; },
    newArticle: function(d) { return "New Article"; },
    deleteArticle: function(d) { return "Delete article"; },
    title: function(d) { return "Title"; },
    answer: function(d) { return "Answer"; },
    private: function(d) { return "Private"; },
    headingMessage: function(d) { return "Perhaps this can help!"; },
    footerMessage: function(d) { return "Did I help you?"; },
    replyYes: function(d) { return "Yes, thank you"; },
    replyNoConnectWithOperator: function(d) { return "No, connect me to an operator"; },
    indexLinkName: function(d) { return "See all articles"; },
    homeHeaderTitle: function(d) { return "Knowledge Base"; },
    search: function(d) { return "Search Knowledge Base"; },
    searchBy: function(d) { return "Search by"; },
    resultsFound: function(d) { return "Found " + d.num + " results for: " + d.searchText; },
    poweredByChaport: function(d) { return "Powered by Chaport"; },
    home: function(d) { return "Go to website"; },
    error404: function(d) { return "404"; },
    error404message: function(d) { return "Page not found"; },
    error500: function(d) { return "Oops!"; },
    error500message: function(d) { return "Something went wrong"; },
    emptySearchMessage: function(d) { return "No Articles Found"; },
    moreResultsText: function(d) { return "Show More →"; },
    loading: function(d) { return "Loading"; },
    defaultSectionName: function(d) { return "Untitled"; },
    slugLabel: function(d) { return "Slug"; },
    headingLabel: function(d) { return "Heading"; },
    canNotDeleteSectionWithArticles: function(d) { return "Can't delete a section with articles"; },
    deleteArticleConfirmation: function(d) { return "Are you sure you want to delete this article?"; },
    deleteSectionConfirmation: function(d) { return "Are you sure you want to delete this section? All articles in this section will also be deleted."; },
    slug: function(d) { return "Slug"; },
    keywords: function(d) { return "Keywords"; },
    minuswords: function(d) { return "Negative keywords"; },
    newAccessWarning: function(d) { return "To get access to FAQ, " + d.line + "."; },
    trialLink: function(d) { return "try FAQ for free"; },
    articlePlaceholderText: function(d) { return "Type your answer here..."; },
    searchArticlePlaceholderText: function(d) { return "Enter an article title or URL"; },
    noArticles: function(d) { return "No articles"; },
    keywordsHint: function(d) { return "Keywords should be separated by commas"; },
    favicon: function(d) { return "Favicon"; },
    addFavicon: function(d) { return "Add Favicon"; },
    changeFavicon: function(d) { return "Change Favicon"; },
    deleteFavicon: function(d) { return "Delete Favicon"; },
    chooseSection: function(d) { return "Choose a section:"; },
    alerts: {
      articleSavedSuccessfully: function(d) { return "The article has been successfully saved."; },
      articleDeletedSuccessfully: function(d) { return "The article has been successfully deleted."; },
      sectionSavedSuccessfully: function(d) { return "The section has been successfully saved."; },
      sectionDeletedSuccessfully: function(d) { return "The section has been successfully deleted."; },
      siteSlugAlreadyInUse: function(d) { return "Sorry, this FAQ URL is already taken"; },
      domainAlreadyInUse: function(d) { return "Sorry, this domain is already taken"; },
      invalidDomain: function(d) { return "It doesn't look like a valid domain. Make sure that it only contains alphanumeric characters and dots. For example, \"chaport.com\" is valid, while \"chaport.com/\" is not"; },
      cantUseSharedFaqDomain: function(d) { return "This domain is reserved, and it can't be used as a custom domain"; },
      sectionSlugAlreadyInUse: function(d) { return "A section with this slug already exists in your FAQ"; },
      articleSlugAlreadyInUse: function(d) { return "An article with this slug already exists in your FAQ"; },
      trialActivated: function(d) { return "The 14-day free trial of FAQ has been activated"; },
      uploadImgFormatError: function(d) { return "Unsupported file format"; },
      faqHasNotBeenPublished: function(d) { return "Your FAQ has not been published yet"; },
      faviconFormatError: function(d) { return "Unsupported file format. Accepted favicon formats are: png, gif, ico."; },
      reorderWarning: function(d) { return "It is not possible to change the order of items while creating a new article."; }
    },
    settings: {
      title: function(d) { return "FAQ Settings"; },
      published: function(d) { return "Published"; },
      visibleToSearchEngines: function(d) { return "Visible to search engines"; },
      faqUrl: function(d) { return "Default FAQ URL"; },
      linkToWebsite: function(d) { return "Link to your website"; },
      customDomain: function(d) { return "Custom domain"; },
      customDomainNote: function(d) { return "After specifying the domain, add this record to your domain's DNS records: CNAME chaport.help"; },
      faqBot: function(d) { return "FAQ Bot"; },
      whenANewChatCome: function(d) { return "When a new chat comes"; },
      suggestFAQArticles: function(d) { return "Suggest relevant FAQ articles"; },
      customDomainPlaceholder: function(d) { return "help.your-company.com"; },
      websiteFieldPlaceholder: function(d) { return "https://your-website.com"; }
    }
  },
  generalSettings: {
    autoAssign: function(d) { return "Assign operators automatically"; },
    autoReassign: function(d) { return "Transfer unanswered chats automatically"; },
    autoClose: function(d) { return "Close answered chats automatically"; },
    whenOperatorsOnline: function(d) { return "When operators are online"; },
    whenOperatorsOffline: function(d) { return "When operators are offline"; },
    newChats: function(d) { return "New chats"; },
    oldChats: function(d) { return "Existing chats"; },
    whatAutoReassignIs: function(d) { return "If auto-assign is on, the chat is transferred to a different online operator. Otherwise, it becomes unassigned."; },
    afterOperatorResponse: function(d) { return "After operator response"; },
    notifications: function(d) { return "Notifications"; },
    offlineEmail: function(d) { return "Send offline-message email notifications to:"; },
    offlineEmailPlaceholder: function(d) { return "Email"; },
    offlineEmailNote: function(d) { return "Leave empty if you don't want to receive email notifications."; },
    emailConfirmationRequired: function(d) { return "Confirmation required"; },
    emailResendConfirmation: function(d) { return "Resend confirmation email"; },
    unconfirmedNote: function(d) { return "A confirmation email has been sent to this address"; },
    requestEmailAutomatically: function(d) { return "Request a visitor's email address automatically"; },
    gdprInform: function(d) { return "Inform visitors how you process their personal data"; },
    beforeStartingAChat: function(d) { return "Before starting a chat"; },
    text: function(d) { return "Text"; },
    question: function(d) { return "Question"; },
    gdprInformDefaultTextWithLink: function(d) { return "We use provided [personal data](" + d.link + ") for support purposes only"; },
    gdprInformComment: function(d) { return "Visitors will see this text before they start a chat."; },
    linkText: function(d) { return "Link"; },
    youCanPasteLink: function(d) { return "You can paste a link using the following format:"; },
    requestMarketingPermission: function(d) { return "Request marketing permission"; },
    whenYouRequestAnEmail: function(d) { return "When you request a visitor's email address"; },
    marketingPermissionComment: function(d) { return "When you request an email address, visitors will be required to answer this question by choosing 'Yes' or 'No'."; },
    alertEmailSent: function(d) { return "Confirmation email has been sent, please check the inbox."; },
    alertEmailAlreadyActivated: function(d) { return "The email has been successfully confirmed."; },
    alertEmailQuotaExceeded: function(d) { return "You've exceeded the hourly/daily quota of changing your email address for offline messages. Please contact support or wait before changing your offline email."; }
  },
  help: {
    askQuestion: function(d) { return "Ask a Question"; },
    knowledgeBase: function(d) { return "Help Center"; },
    knowledgeBaseUrl: function(d) { return "https://chaport.com/help"; }
  },
  installationCode: {
    copyAndPasteCode: function(d) { return "Copy & paste this code above the &lt;/body&gt; tag in HTML-code on your website:"; },
    copyCode: function(d) { return "Copy Installation Code"; },
    copyId: function(d) { return "Copy App ID"; },
    copiedCode: function(d) { return "Your installation code has been copied to the clipboard."; },
    copiedId: function(d) { return "Your app ID has been copied to the clipboard."; },
    alternativeMethodsCaption: function(d) { return "Or use a plugin:"; },
    platforms: {
      bubble: {
        name: function(d) { return "Bubble"; },
        helpLink: function(d) { return "https://www.chaport.com/help/installation-on-a-website/install-chaport-on-bubble "; }
      },
      ecwid: {
        name: function(d) { return "Ecwid"; },
        helpLink: function(d) { return "https://www.chaport.com/help/installation-on-a-website/install-chaport-on-ecwid"; }
      },
      joomla: {
        name: function(d) { return "Joomla"; },
        helpLink: function(d) { return "https://www.chaport.com/help/installation-on-a-website/install-chaport-on-joomla"; }
      },
      tagManager: {
        name: function(d) { return "Google Tag&nbsp;Manager"; },
        helpLink: function(d) { return "https://www.chaport.com/help/installation-on-a-website/install-chaport-using-google-tag-manager "; }
      },
      wordpress: {
        name: function(d) { return "WordPress"; },
        helpLink: function(d) { return "https://www.chaport.com/help/installation-on-a-website/install-chaport-on-wordpress"; }
      }
    }
  },
  integrations: {
    connected: function(d) { return "Connected"; },
    incomplete: function(d) { return "Incomplete"; },
    createLink: function(d) { return "Connect"; },
    viewDetails: function(d) { return "Details"; },
    disconnect: function(d) { return "Disconnect"; },
    availableOnPlan: function(d) { return "Available on " + d.planName; },
    unavailableOnPlan: function(d) { return "Unavailable on " + d.planName; },
    limitedOnPlan: function(d) { return "Limited on " + d.planName; },
    unavailableOnFree: function(d) { return "Unavailable on Free"; },
    limitedOnFree: function(d) { return "Limited on Free"; },
    via: function(d) { return "via"; },
    howToConnect: function(d) { return "How to Connect"; },
    howToConnectDescription: function(d) { return "Click on the \"Connect\" button and choose a " + d.platformName + " " + d.channelSingularWhom + " you want to connect."; },
    newLimitedAccessWarning: function(d) { return "To use this integration without restrictions, " + d.line + "."; },
    newAccessWarning: function(d) { return "To use this integration, " + d.line + "."; },
    disconnectConfirm: function(d) { return "Do you wish to disconnect \"" + d.channelName + "\"?"; },
    disconnectAllConfirm: function(d) { return "Do you wish to disconnect " + d.platformName + "?"; },
    description: function(d) { return "Answer customer questions coming from " + d.platformName + " directly from Chaport."; },
    connectedChannels: function(d) { return "Connected " + d.platformName + " " + d.channelPlural; },
    addChannel: function(d) { return "+ Connect a " + d.channelSingular; },
    disconnectAll: function(d) { return "Disconnect " + d.platformName; },
    connectingChannel: function(d) { return "Connect " + d.platformName + " " + d.channelSingular; },
    editChannel: function(d) { return "Edit " + d.platformName + " " + d.channelSingular; },
    disconnectChannel: function(d) { return "Disconnect " + d.platformName + " " + d.channelSingular; },
    channelToken: function(d) { return d.platformName + " token"; },
    needHelp: function(d) { return "Need help? Read the article: <a href=\"" + d.helpLink + "\" target=\"_blank\">Integration with " + d.platformName + "</a>"; },
    alertServiceUnavailable: function(d) { return "Integrations service is currently unavailable. Please try again later."; },
    alertMissingPermissions: function(d) { return "Requested permissions are necessary to ensure that your messages and messages of your " + d.platformName + " customers can be delivered properly."; },
    alertNoChannelsAvailable: function(d) { return "Your current " + d.platformName + " account does not have any " + d.channelPlural + " associated with it available for integration."; },
    alertConnectedSuccessfully: function(d) { return "The " + select(d.channelName, { undefined: "", other: "\"" + d.channelName + "\" " }) + d.platformName + " " + d.channelSingular + " has been successfully connected to your Chaport account."; },
    alertConnectedAlready: function(d) { return "This " + d.platformName + " " + d.channelSingular + " has already been connected to a different Chaport account."; },
    alertDisconnectedSuccessfully: function(d) { return "The " + select(d.channelName, { undefined: "", other: "\"" + d.channelName + "\" " }) + d.platformName + " " + d.channelSingular + " has been successfully disconnected from your Chaport account."; },
    alertDisconnectedAllSuccessfully: function(d) { return "All " + d.platformName + " " + d.channelPlural + " have been successfully disconnected from your Chaport account."; },
    alertInvalidToken: function(d) { return "This token doesn't seem to be valid."; },
    numberOfIntegrations: function(d) { return "4000+ integrations"; },
    amocrm: {
      name: function(d) { return "amoCRM"; },
      description: function(d) { return "Pass user info and chat transcripts to your amoCRM account."; },
      channelSingular: function(d) { return "account"; },
      channelSingularWhom: function(d) { return "account"; },
      channelSingularToWhat: function(d) { return "account"; },
      channelSingularNo: function(d) { return "account"; },
      channelPlural: function(d) { return "accounts"; },
      howToConnectDescription: function(d) { return "Click on the \"Connect\" button and choose an amoCRM account you want to connect."; },
      addChannel: function(d) { return "+ Connect an " + d.channelSingular; },
      connectingChannel: function(d) { return "Connect " + d.platformName + " " + d.channelSingular; }
    },
    ecwid: {
      name: function(d) { return "Ecwid"; },
      description: function(d) { return "Install the chat widget on your Ecwid-based site and automatically pass user info to Chaport."; },
      channelSingular: function(d) { return "site"; },
      channelSingularWhom: function(d) { return "site"; },
      channelSingularToWhat: function(d) { return "site"; },
      channelSingularNo: function(d) { return "site"; },
      channelPlural: function(d) { return "sites"; },
      howToConnectDescription: function(d) { return "Click on the \"Connect\" button and add Chaport to your Ecwid store."; }
    },
    email: {
      name: function(d) { return "Email"; },
      viaName: function(d) { return "email"; },
      description: function(d) { return "Answer customer questions sent to your mailbox directly from Chaport."; },
      channelSingular: function(d) { return "mailbox"; },
      channelSingularWhom: function(d) { return "mailbox"; },
      channelSingularToWhat: function(d) { return "mailbox"; },
      channelSingularNo: function(d) { return "mailbox"; },
      channelPlural: function(d) { return "mailboxes"; },
      channelFullName: function(d) { return "Mailbox"; },
      howToConnectDescription: function(d) { return "Click on the \"Connect\" button and integrate your mailbox with Chaport."; },
      connectingChannel: function(d) { return "Connect Mailbox"; },
      editChannel: function(d) { return "Edit Mailbox"; },
      disconnectChannel: function(d) { return "Disconnect Mailbox"; },
      connectedChannels: function(d) { return "Connected " + d.channelPlural; },
      addChannel: function(d) { return "+ Connect " + d.channelSingular; },
      alertConnectedSuccessfully: function(d) { return "The " + select(d.channelName, { undefined: "", other: "\"" + d.channelName + "\" " }) + d.channelSingular + " has been successfully connected to your Chaport account."; },
      alertConnectedAlready: function(d) { return "This " + d.channelSingular + " has already been connected to a different Chaport account."; },
      alertDisconnectedSuccessfully: function(d) { return "The " + select(d.channelName, { undefined: "", other: "\"" + d.channelName + "\" " }) + d.channelSingular + " has been successfully disconnected from your Chaport account."; },
      disableForwardingLink: function(d) { return "Before proceeding, please make sure to disable email forwarding by following this link:"; },
      disableForwardingNoLink: function(d) { return "Before proceeding, please make sure to disable email forwarding in your email provider's settings."; },
      stopForwardingToChaport: function(d) { return "Stop forwarding emails to Chaport"; },
      disabledForwarding: function(d) { return "I've disabled email forwarding"; },
      providers: {
        gmail: function(d) { return "Gmail"; },
        yahoo: function(d) { return "Yahoo"; },
        zoho: function(d) { return "Zoho"; },
        outlook: function(d) { return "Outlook"; },
        yandex: function(d) { return "Yandex"; },
        mailru: function(d) { return "Mail Ru"; },
        icloud: function(d) { return "iCloud"; },
        other: function(d) { return "Other"; }
      },
      setup: {
        mailboxStep: function(d) { return "Mailbox"; },
        mailboxHeader: function(d) { return "Provide your mailbox details:"; },
        providerStep: function(d) { return "Provider"; },
        providerHeader: function(d) { return "Select your email service provider:"; },
        forwardingStep: function(d) { return "Forwarding"; },
        forwardingHeader: function(d) { return "Set up email forwarding:"; },
        successHeader: function(d) { return "Mailbox successfully connected"; },
        emailLabel: function(d) { return "Email address"; },
        nameLabel: function(d) { return "Mailbox name"; },
        senderLabel: function(d) { return "Sender name"; },
        senderNote: function(d) { return "Make sender name more recognizable by adding your brand name to it (e.g., {operator_name} from YourCompany)."; },
        signatureLabel: function(d) { return "Signature"; },
        signatureNote: function(d) { return "You can add such variables as {operator_name}, {job_title}, and {email_address}. You can also use markdown, e.g., to paste a link using the following format: [Link](https://your-site.com)"; },
        forwardingPreface: function(d) { return "Follow these steps to turn on automatic forwarding in " + d.provider + ":"; },
        confirmForwarding: function(d) { return "Verification link"; },
        forwardEmailAddress: function(d) { return "Forwarding address"; },
        verificationCodePlaceholder: function(d) { return "Code will be here"; },
        openSettings: function(d) { return "Open settings"; },
        sendTestEmail: function(d) { return "Tick the box below and click <code>Send&nbsp;test&nbsp;email</code> button to verify that integration works correctly."; },
        enabledForwarding: function(d) { return "I've enabled email forwarding"; },
        sendEmail: function(d) { return "Send test email"; },
        resendEmail: function(d) { return "Resend test email"; },
        sendEmailNote: function(d) { return "We'll send a message to your email address and see if it comes back to Chaport"; },
        waitingEmailNote: function(d) { return "Waiting for a test email..."; },
        alertEmailTypo: function(d) { return "You might have a typo in your email address. Please check and try again. If there is no mistake, please contact our support for assistance."; },
        noTestEmail: function(d) { return "<b>We have not received the test email</b>. Please check the following:"; },
        ensureEmail: function(d) { return "The address you are forwarding from should be " + d.publicEmailAddress + "."; },
        ensureConfirmed: function(d) { return "Double-check your forwarding settings. Make sure that you followed all of the steps above."; },
        ensureInbox: function(d) { return "Check the spam folder. If our test email gets into spam, mark it as \"not spam\" and add \"forwarding-noreply@mail.chaport.help\" to contacts, then resend the test email."; },
        providers: {
          gmail: {
            openSettings: function(d) { return "Open the " + d.publicEmailAddress + " <a href=\"https://mail.google.com/mail/u/" + d.publicEmailAddress + "/" + "#" + "settings/fwdandpop\" target=\"_blank\">account forwarding settings</a> (make sure you are logged in into this account)."; },
            addForwardingAddress: function(d) { return "In the Forwarding section, click <code>Add&nbsp;a&nbsp;forwarding&nbsp;address</code>."; },
            enterThisAddress: function(d) { return "Enter the following address:"; },
            proceed: function(d) { return "Click <code>Next</code> → <code>Proceed</code> → <code>OK</code>."; },
            clickVerificationLink: function(d) { return "Wait a while and click the verification link below when it's active:"; },
            goBackToSettings: function(d) { return "Important! Go back to the <a href=\"https://mail.google.com/mail/u/" + d.publicEmailAddress + "/" + "#" + "settings/fwdandpop\" target=\"_blank\">forwarding settings</a> page and refresh your browser."; },
            changeForwardBehaviour: function(d) { return "In the Forwarding section, select <code>Forward&nbsp;a&nbsp;copy&nbsp;of&nbsp;incoming&nbsp;mail&nbsp;to</code>."; },
            clickSave: function(d) { return "At the bottom of the page, click <code>Save&nbsp;Changes</code>."; }
          },
          mailru: {
            useVerificationCode: function(d) { return "Wait for a code to appear below, and use it to verify forwarding:"; }
          },
          other: {
            setupForwarding: function(d) { return "Auto-forward all incoming emails sent to " + d.publicEmailAddress + " to:"; },
            verificationNote: function(d) { return "Important! Some email providers send a verification email to the forwarding address."; },
            checkInbox: function(d) { return "Please check your <a href=\"" + "#" + "chats\">incoming messages</a> and see if there's a verification email from your email provider. Follow the instructions in that email and then complete the Mailbox setup."; }
          }
        }
      }
    },
    facebook: {
      name: function(d) { return "Facebook"; },
      channelGender: function(d) { return ""; },
      channelSingular: function(d) { return "page"; },
      channelSingularWhom: function(d) { return "page"; },
      channelSingularToWhat: function(d) { return "page"; },
      channelSingularNo: function(d) { return "page"; },
      channelPlural: function(d) { return "pages"; },
      channelFullName: function(d) { return "Facebook page"; },
      needHelpLink: function(d) { return "https://www.chaport.com/integrations/facebook"; },
      howToConnectDescription: function(d) { return "Click on the \"Connect\" button and choose a Facebook page you want to connect."; },
      requiredPermissions: function(d) { return "Required permissions"; },
      requiredPermissionsDescription: function(d) { return "The following permissions are required for the Facebook integration to work properly. Please read the explanations below and reconsider your permission choices."; },
      permissions: {
        pages_manage_metadata: {
          title: function(d) { return "Manage accounts, settings, and webhooks for a Page"; },
          description: function(d) { return "This permission is needed to receive notifications (so called webhooks) from Facebook about messages sent by Facebook users to your page."; }
        },
        pages_messaging: {
          title: function(d) { return "Manage and access Page conversations in Messenger"; },
          description: function(d) { return "This permission is needed to enable you replying to your Facebook users' messages via Chaport."; }
        },
        pages_read_engagement: {
          title: function(d) { return "Read content posted on the Page"; },
          description: function(d) { return "This permission is needed to retrieve basic information (such as its name) about a page when integration is initially created."; }
        },
        pages_show_list: {
          title: function(d) { return "Show a list of the Pages you manage"; },
          description: function(d) { return "This permission is needed to allow you to choose a page to integrate Chaport with. Note, that Facebook only lets us know about the pages that you select on the first step of Facebook Login popup, thus we will never know about any page that you don't want us to know about."; }
        }
      },
      rerequest: {
        confirm: function(d) { return "Allow"; },
        cancel: function(d) { return "I don't want this integration"; }
      }
    },
    installPopup: {
      windowTitle: function(d) { return "Connect " + d.platformName + " to Chaport"; },
      successText: function(d) { return d.platformName + " has been connected to Chaport"; },
      closeWindow: function(d) { return "Close this window to get back to Chaport"; }
    },
    joomla: {
      name: function(d) { return "Joomla"; },
      description: function(d) { return "Install the chat widget on your Joomla-based site and automatically pass user info to Chaport."; },
      channelSingular: function(d) { return "site"; },
      channelSingularWhom: function(d) { return "site"; },
      channelSingularToWhat: function(d) { return "site"; },
      channelSingularNo: function(d) { return "site"; },
      channelPlural: function(d) { return "sites"; },
      howToConnectDescription: function(d) { return "Click on the \"Connect\" button and add Chaport to your Joomla website."; }
    },
    telegram: {
      name: function(d) { return "Telegram"; },
      channelGender: function(d) { return ""; },
      channelSingular: function(d) { return "bot"; },
      channelSingularWhom: function(d) { return "bot"; },
      channelSingularToWhat: function(d) { return "bot"; },
      channelSingularNo: function(d) { return "bot"; },
      channelPlural: function(d) { return "bots"; },
      channelFullName: function(d) { return "Telegram bot"; },
      needHelpLink: function(d) { return "https://www.chaport.com/integrations/telegram"; },
      howToConnectDescription: function(d) { return "Click on the \"Connect\" button and enter the token of a Telegram bot you want to connect."; }
    },
    viber: {
      name: function(d) { return "Viber"; },
      channelGender: function(d) { return ""; },
      channelSingular: function(d) { return "bot"; },
      channelSingularWhom: function(d) { return "bot"; },
      channelSingularToWhat: function(d) { return "bot"; },
      channelSingularNo: function(d) { return "bot"; },
      channelPlural: function(d) { return "bots"; },
      channelFullName: function(d) { return "Viber bot"; },
      needHelpLink: function(d) { return "https://www.chaport.com/help/integrations/integration-with-viber"; },
      howToConnectDescription: function(d) { return "Click on the \"Connect\" button and enter the token of a Viber bot you want to connect."; }
    },
    vk: {
      name: function(d) { return "VK"; },
      channelGender: function(d) { return ""; },
      channelSingular: function(d) { return "community"; },
      channelSingularWhom: function(d) { return "community"; },
      channelSingularToWhat: function(d) { return "community"; },
      channelSingularNo: function(d) { return "community"; },
      channelPlural: function(d) { return "communities"; },
      channelFullName: function(d) { return "VK community"; },
      needHelpLink: function(d) { return "https://www.chaport.com/help/integrations/integration-with-vk"; },
      howToConnectDescription: function(d) { return "Click on the \"Connect\" button and enter the token of a VK community you want to connect."; }
    },
    website: {
      name: function(d) { return "live chat"; }
    },
    wordpress: {
      name: function(d) { return "WordPress"; },
      description: function(d) { return "Install the chat widget on your Wordpress-based site and automatically pass user info to Chaport."; },
      channelSingular: function(d) { return "site"; },
      channelSingularWhom: function(d) { return "site"; },
      channelSingularToWhat: function(d) { return "site"; },
      channelSingularNo: function(d) { return "site"; },
      channelPlural: function(d) { return "sites"; },
      howToConnectDescription: function(d) { return "Click on the \"Connect\" button and add Chaport to your WordPress website. "; }
    },
    zapier: {
      name: function(d) { return "Zapier"; },
      channelSingular: function(d) { return "zap"; },
      channelSingularWhom: function(d) { return "zap"; },
      channelSingularToWhat: function(d) { return "zap"; },
      channelSingularNo: function(d) { return "zap"; },
      channelPlural: function(d) { return "zaps"; },
      howToConnectDescription: function(d) { return "Click on the \"Connect\" button to set up a new Zap."; },
      description: function(d) { return "Use Zapier to integrate Chaport with 4,000+ other services."; }
    }
  },
  intervals: {
    never: function(d) { return "Never"; },
    afterXSeconds: function(d) { return "After " + plural(d.value, 0, en, { "1": "1 second", other: number(d.value, "value") + " seconds" }); },
    afterXMinutes: function(d) { return "After " + plural(d.value, 0, en, { "1": "1 minute", other: number(d.value, "value") + " minutes" }); },
    afterXHours: function(d) { return "After " + plural(d.value, 0, en, { "1": "1 hour", other: number(d.value, "value") + " hours" }); }
  },
  labels: {
    and: function(d) { return "and"; },
    yes: function(d) { return "Yes"; },
    no: function(d) { return "No"; },
    enabled: function(d) { return "On"; },
    disabled: function(d) { return "Off"; },
    showAll: function(d) { return "Show all"; },
    upgradeToGetAccess: function(d) { return "To get access to additional settings, " + d.line; },
    blankUpgradeTo: function(d) { return d.line; },
    linkUpgradeTo: function(d) { return "<a href=\"" + "#" + "/settings/billing\">upgrade&nbsp;to " + d.planName + "</a>"; },
    extendPlan: function(d) { return "buy more seats"; },
    upgradeTo: function(d) { return "upgrade to " + d.planName; },
    contactUsToUpgrade: function(d) { return "contact us to upgrade"; },
    toEnableIt: function(d) { return "to enable it"; },
    na: function(d) { return "N/A"; }
  },
  landing: {
    yourWebsite: function(d) { return "Your Website"; },
    hiThere: function(d) { return "Hi there! Imagine that you're on your website now."; },
    clickOnChatButton: function(d) { return "Click on our chat button in the bottom-right corner and write something."; },
    youWillReceive: function(d) { return "You will receive this message in Chaport app opened in the previous tab in your browser."; },
    tryToRespond: function(d) { return "Try to respond from there."; }
  },
  languageNames: {
    en: function(d) { return "English"; },
    ru: function(d) { return "Russian"; },
    es: function(d) { return "Spanish"; },
    pt: function(d) { return "Portuguese"; },
    de: function(d) { return "German"; },
    fr: function(d) { return "French"; },
    it: function(d) { return "Italian"; },
    nl: function(d) { return "Dutch"; },
    tr: function(d) { return "Turkish"; },
    et: function(d) { return "Estonian"; },
    pl: function(d) { return "Polish"; },
    vi: function(d) { return "Vietnamese"; },
    lv: function(d) { return "Latvian"; },
    lt: function(d) { return "Lithuanian"; },
    id: function(d) { return "Indonesian"; },
    el: function(d) { return "Greek"; },
    uk: function(d) { return "Ukrainian"; },
    sv: function(d) { return "Swedish"; },
    zh: function(d) { return "Chinese"; },
    "zh-cn": function(d) { return "Chinese (Simplified)"; },
    "zh-tw": function(d) { return "Chinese (Traditional)"; },
    cs: function(d) { return "Czech"; },
    no: function(d) { return "Norwegian"; },
    da: function(d) { return "Danish"; },
    sk: function(d) { return "Slovak"; },
    sl: function(d) { return "Slovenian"; },
    bs: function(d) { return "Bosnian"; },
    sr: function(d) { return "Serbian"; },
    sr_Latn_ME: function(d) { return "Montenegrin"; },
    az: function(d) { return "Azerbaijani"; },
    cy: function(d) { return "Welsh"; },
    fi: function(d) { return "Finnish"; },
    hu: function(d) { return "Hungarian"; },
    ja: function(d) { return "Japanese"; },
    ro: function(d) { return "Romanian"; },
    th: function(d) { return "Thai"; },
    lo: function(d) { return "Lao"; },
    bg: function(d) { return "Bulgarian"; },
    hr: function(d) { return "Croatian"; },
    ka: function(d) { return "Georgian"; }
  },
  login: {
    title: function(d) { return "Welcome to Chaport"; },
    errorEmailRequired: function(d) { return "Email is required"; },
    errorPasswordRequired: function(d) { return "Password is required"; },
    errorInvalidCredentials: function(d) { return "No user with this combination of email and password"; },
    errorInactiveAccount: function(d) { return "Your business account has been deactivated. Please contact our support for details."; },
    errorInactiveUser: function(d) { return "Your user account has been deactivated by your business account administrator"; },
    errorConfirmEmailBeforeLogin: function(d) { return "Activate your account before logging in"; },
    errorAcceptInvitationBeforeLogin: function(d) { return "Accept invitation before logging in"; },
    labelEmail: function(d) { return "Email Address"; },
    labelPassword: function(d) { return "Password"; },
    buttonSubmit: function(d) { return "Log in"; },
    noAccount: function(d) { return "Don't have an account?"; },
    register: function(d) { return "Sign up"; },
    forgotPassword: function(d) { return "Forgot your password?"; },
    resetPassword: function(d) { return "Reset it"; }
  },
  messages: {
    copied: function(d) { return "Copied!"; },
    loading: function(d) { return "Loading..."; },
    saving: function(d) { return "Saving..."; },
    saved: function(d) { return "Saved!"; },
    saveError: function(d) { return "Error"; },
    savingError: function(d) { return "Unable to save"; },
    formatError: function(d) { return "Invalid format"; }
  },
  nav: {
    appearance: function(d) { return "Appearance"; },
    autoInvitations: function(d) { return "Auto-Invitations"; },
    assignmentRules: function(d) { return "Assignment Rules"; },
    chatbots: function(d) { return "Chatbots"; },
    chats: function(d) { return "Chats"; },
    downloads: function(d) { return "Download Apps"; },
    faq: function(d) { return "FAQ"; },
    generalSettings: function(d) { return "General"; },
    installationCode: function(d) { return "Installation Code"; },
    integrations: function(d) { return "Integrations"; },
    operators: function(d) { return "Operators"; },
    prechatForm: function(d) { return "Pre-chat Form"; },
    reports: function(d) { return "Reports"; },
    reportsAutoInvitations: function(d) { return "Proactive Chats"; },
    reportsBotChats: function(d) { return "Bot Chats"; },
    reportsResponseTime: function(d) { return "Response Times"; },
    reportsTotalChats: function(d) { return "Total Chats"; },
    reportsWorkingHours: function(d) { return "Working Hours"; },
    savedReplies: function(d) { return "Saved Replies"; },
    settings: function(d) { return "Settings"; },
    subscriptions: function(d) { return "Billing"; },
    teams: function(d) { return "Teams"; },
    visitorData: function(d) { return "Visitor Info"; }
  },
  notifications: {
    forcedAway: function(d) { return "Status is set to 'Away'"; },
    forcedAwayBody: function(d) { return "Your status has been changed to 'Away' due to a missed chat."; },
    connectionLost: function(d) { return "Lost connection"; },
    connectionLostBody: function(d) { return "Lost connection to a chat server"; }
  },
  oauth: {
    clientWillHaveAccess: function(d) { return d.client + " will be allowed to:"; },
    switchAccount: function(d) { return "Switch account"; },
    invalidClientIdWarning: function(d) { return "Application, that directed you to this page, probably haven't been properly configured. Please contact its support regarding this issue or send us a message at <a href='https://www.chaport.com' target='_blank'>www.chaport.com</a>."; },
    scopes: {
      visitors_read: function(d) { return "read visitors' info"; },
      chats_read: function(d) { return "read chats"; },
      chats_write: function(d) { return "write to chats"; }
    }
  },
  operators: {
    newTitle: function(d) { return "New Operator"; },
    addOperator: function(d) { return "Add Operator"; },
    backButton: function(d) { return "Operators"; },
    chats: function(d) { return "Chats"; },
    stats: function(d) { return "Stats"; },
    deleteOperator: function(d) { return "Delete"; },
    deleteAccount: function(d) { return "Delete account"; },
    deleteAccountConfirmation: function(d) { return "Type 'DELETE' and press OK in order to delete your company account, including the accounts of all operators, all chat history, chat widget, settings, etc. Warning: this process can't be reversed!"; },
    deleteAccountAlert: function(d) { return "To delete your company account, type 'DELETE' in a popup window."; },
    deleteOperatorConfirmation: function(d) { return "Are you sure you want to delete the operator?"; },
    addPhoto: function(d) { return "Add photo"; },
    editPhoto: function(d) { return "Edit"; },
    changePhoto: function(d) { return "Change photo"; },
    choosePhoto: function(d) { return "Choose file..."; },
    deletePhoto: function(d) { return "Delete photo"; },
    cropResult: function(d) { return "Result:"; },
    errorConfirmEmailToAddOperators: function(d) { return "You have to verify your email address before adding new operators (email with a link was sent upon registration)."; },
    errorNameRequired: function(d) { return "Name is required"; },
    errorEmailRequired: function(d) { return "Email is required"; },
    errorEmailOccupied: function(d) { return "User with this email address is registered already"; },
    errorLanguageRequired: function(d) { return "Language is required"; },
    errorRoleRequired: function(d) { return "Role is required"; },
    name: function(d) { return "Name"; },
    jobTitle: function(d) { return "Job title"; },
    email: function(d) { return "Email"; },
    language: function(d) { return "Language"; },
    showInWidget: function(d) { return "Show in chat widget"; },
    chatLanguages: function(d) { return "Preferred chat languages"; },
    role: function(d) { return "Role"; },
    messageSound: function(d) { return "Message sound"; },
    defaultJobTitle: function(d) { return "Consultant"; },
    activationRequired: function(d) { return "Confirmation is needed."; },
    operatorsWaitingForSeat: function(d) { return plural(d.count, 0, en, { "1": "1 operator is", other: number(d.count, "count") + " operators are" }) + " waiting for a seat"; },
    buyMoreSeats: function(d) { return "Buy more seats"; },
    workingHours: function(d) { return "Working hours"; },
    mondayToFriday: function(d) { return "Mon-Fri"; },
    saturdayToSunday: function(d) { return "Sat-Sun"; },
    addWorkingHours: function(d) { return "+ Add working hours"; },
    statusAutoUpdate: function(d) { return "Status auto-toggle"; },
    daysOff: function(d) { return "Days off"; },
    dayOff: function(d) { return "Day off"; },
    showAllDays: function(d) { return "Show all days"; },
    showDayGroups: function(d) { return "Show day groups"; },
    alertEmailResent: function(d) { return "Confirmation email has been sent to your email address."; },
    alertInvitationEmailResent: function(d) { return "An invitation has been sent to the operator's email address"; },
    alertEmailQuotaExceeded: function(d) { return "You've exceeded the hourly/daily quota of adding operators. Please contact support or wait before adding another operator."; },
    activateOperator: function(d) { return "Activate"; },
    deactivateOperator: function(d) { return "Deactivate"; },
    deactivated: function(d) { return "Deactivated"; },
    activeOperatorQuotaExceeded: function(d) { return "You have reached active operators limit on your account. To activate more operators, please go to <a href=\"" + "#" + "/settings/billing\">Billing</a> and upgrade."; },
    addActiveOperatorQuotaExceeded: function(d) { return "You have reached active operators limit on your account. To add more operators, please go to <a href=\"" + "#" + "/settings/billing\">Billing</a> and upgrade."; },
    emailWithTypo: function(d) { return "This email address may have a typo. Please double-check it."; },
    reDeactivationTimeoutError: function(d) { return "Re-deactivation is available once every 7 days."; },
    activationAlert: function(d) { return "The operator has been successfully activated."; },
    deactivationAlert: function(d) { return "The operator has been successfully deactivated."; },
    accountDeletionAlert: function(d) { return "Your account has been successfully deleted. We are sorry to see you go. You are always welcome to join Chaport again."; },
    roles: {
      operator: function(d) { return "Operator"; },
      admin: function(d) { return "Admin"; },
      owner: function(d) { return "Account owner"; }
    }
  },
  passwordReset: {
    successMessage: function(d) { return "Your password has been successfully updated."; },
    title: function(d) { return "Create new password"; },
    buttonSubmit: function(d) { return "Update password"; },
    invalidCode: function(d) { return "This password reset link is not working: either it is outdated or has already been used."; }
  },
  passwordResetRequest: {
    successMessage: function(d) { return "A password reset link has just been sent to your email address."; },
    title: function(d) { return "Password reset"; },
    buttonSubmit: function(d) { return "Reset password"; },
    knowPassword: function(d) { return "Know password?"; },
    inactive: function(d) { return "User with this email address has not been activated, please check your email box for an activation email."; },
    noSuchUser: function(d) { return "User with this email address is not registered."; }
  },
  payments: {
    addOperatorsInvoiceDescription: function(d) { return "Add " + plural(d.addedOperators, 0, en, { "1": "1 operator", other: number(d.addedOperators, "addedOperators") + " operators" }) + " to current license"; },
    newLicenseInvoiceDescription: function(d) { return plural(d.duration, 0, en, { "1": "1 month", other: number(d.duration, "duration") + " months" }) + " Pro license for " + plural(d.q, 0, en, { "1": "1 operator", other: number(d.q, "q") + " operators" }); }
  },
  profile: {
    profile: function(d) { return "Profile"; },
    logout: function(d) { return "Log out"; }
  },
  reports: {
    ours: function(d) { return "Ours"; },
    all: function(d) { return "All accounts"; },
    allOperators: function(d) { return "All Operators"; },
    day: function(d) { return "Day"; },
    week: function(d) { return "Week"; },
    month: function(d) { return "Month"; },
    lastWeek: function(d) { return "Last week"; },
    lastMonth: function(d) { return "Last month"; },
    chatsServed: function(d) { return "Chats Served"; },
    chatsMissed: function(d) { return "Chats Missed"; },
    served: function(d) { return "Served"; },
    missed: function(d) { return "Missed"; },
    dailyAvgServed: function(d) { return "Daily avg served chats"; },
    dailyAvgMissed: function(d) { return "Daily avg missed chats"; },
    showServed: function(d) { return "Show served"; },
    showMissed: function(d) { return "Show missed"; },
    byAutoInvitations: function(d) { return "Proactive Chats"; },
    incomingChats: function(d) { return "Incoming Chats"; },
    firstResponseTime: function(d) { return "First Response Time"; },
    responseTime: function(d) { return "Response Time"; },
    chatClosingTime: function(d) { return "Time to close"; },
    average: function(d) { return "Average"; },
    days: function(d) { return d.value + "d"; },
    hours: function(d) { return d.value + "h"; },
    minutes: function(d) { return d.value + "m"; },
    seconds: function(d) { return d.value + "s"; },
    botsShown: function(d) { return "Bot sent"; },
    botsTotal: function(d) { return "Engaged"; },
    botsCompleted: function(d) { return "Completed"; },
    botsShownLegend: function(d) { return "Bot sent – " + d.value; },
    botsTotalLegend: function(d) { return "Engaged – " + d.value + " (" + d.percent + "%)"; },
    botsCompletedLegend: function(d) { return "Completed – " + d.value + " (" + d.percent + "%)"; },
    botChatsUsed: function(d) { return "Bot chats used:"; },
    limitIsExceeded: function(d) { return "Limit is reached."; },
    daysLeftUntilLimitIsReset: function(d) { return plural(d.num, 0, en, { "1": "1 day", other: number(d.num, "num") + " days" }) + " left until the limit is reset."; },
    toIncreaseLimit: function(d) { return "To increase the limit,"; },
    buyMoreSeats: function(d) { return "buy more seats"; },
    botChatsPerMonth: function(d) { return "(1 seat gives you 1000 bot chats/mo)."; },
    upgradeToIncreaseLimit: function(d) { return "To increase the limit, <a href=\"" + "#" + "/settings/billing\">upgrade your account</a>."; },
    usedOfLimitText: function(d) { return "out of"; },
    newAccessWarning: function(d) { return "To get access to this report, " + d.line + "."; },
    servedChatsByOperator: function(d) { return "Served chats by operator"; },
    missedChatsByOperator: function(d) { return "Missed chats by operator"; },
    servedChatsByTeam: function(d) { return "Served chats by team"; },
    missedChatsByTeam: function(d) { return "Missed chats by team"; },
    fakeTeamNameSupport: function(d) { return "Customer Support"; },
    fakeTeamNameTechSupport: function(d) { return "Tech Support"; },
    sent: function(d) { return "Sent"; },
    engaged: function(d) { return "Engaged"; },
    sentChatbots: function(d) { return "Sent chatbots"; },
    sentAutoInvitations: function(d) { return "Sent auto-invitations"; },
    engagementsByAutoInvitation: function(d) { return "Engaged by auto-invitation"; },
    engagementsByChatbots: function(d) { return "Engaged by chatbot"; },
    showEngaged: function(d) { return "Show engaged"; },
    showSent: function(d) { return "Show sent"; },
    deleted: function(d) { return "Deleted"; },
    visitors: function(d) { return "Visitors"; },
    chatInitiators: function(d) { return "Chat Initiators"; },
    chatRatings: function(d) { return "Chat Ratings"; },
    positiveRatings: function(d) { return "Positive Ratings"; },
    chatRatingsByOperator: function(d) { return "Chat Ratings by operator"; },
    chatRatingsTooltip: function(d) { return "The following ratings are considered positive:\n"; }
  },
  reviews: {
    headerPleaseRate: function(d) { return "Enjoying Chaport?"; },
    textPleaseRate: function(d) { return "Tap a star to let us know how you rate it."; },
    btnLater: function(d) { return "Ask Me Later"; },
    btnNever: function(d) { return "Never Ask"; },
    feedbackPlaceholder: function(d) { return "Your Feedback..."; },
    header5: function(d) { return "Thank you so much!"; },
    text5: function(d) { return "Leave a brief review on this platform and get a 15% discount:"; },
    text5contactUsBegin: function(d) { return "After leaving a review, please "; },
    text5contactUsLink: function(d) { return "contact us"; },
    text5contactUsEnd: function(d) { return ", and we'll provide you with a discount for your next payment."; },
    header4: function(d) { return "Thank you!"; },
    header1to3: function(d) { return "We're sorry to hear that"; },
    text1to4: function(d) { return "Please let us know how we can improve Chaport:"; },
    headerFeedbackSubmitted: function(d) { return "Thank you for your feedback!"; },
    textFeedbackSubmitted: function(d) { return "We'll try to make Chaport better."; },
    starTitles: {
      "1": function(d) { return "Awful"; },
      "2": function(d) { return "Bad"; },
      "3": function(d) { return "Fair"; },
      "4": function(d) { return "Good"; },
      "5": function(d) { return "Great"; }
    }
  },
  savedReplies: {
    addNew: function(d) { return "+ Add new reply"; },
    unsavedEdits: function(d) { return "You have unsaved edits."; },
    viewEdits: function(d) { return "View edits"; },
    newAccessWarning: function(d) { return "To get access to saved replies, " + d.line + "."; }
  },
  setup: {
    company: {
      title: function(d) { return "Company Details"; },
      header: function(d) { return "Please tell us about your company:"; },
      industryLabel: function(d) { return "Industry"; },
      employeesLabel: function(d) { return "Company size"; },
      roleLabel: function(d) { return "Your role"; },
      anyOptions: {
        other: function(d) { return "Other"; }
      },
      industryOptions: {
        auto: function(d) { return "Automotive"; },
        edu: function(d) { return "Education"; },
        entertainment: function(d) { return "Entertainment"; },
        finance: function(d) { return "Finance"; },
        games: function(d) { return "Games & Gambling"; },
        nonProfit: function(d) { return "Government / Non-profit"; },
        healthcare: function(d) { return "Healthcare"; },
        humanResources: function(d) { return "Human Resources"; },
        it: function(d) { return "IT"; },
        manufacturing: function(d) { return "Manufacturing"; },
        marketing: function(d) { return "Marketing"; },
        media: function(d) { return "Media & Telecom"; },
        professionalServices: function(d) { return "Professional Services"; },
        realEstate: function(d) { return "Real Estate"; },
        retail: function(d) { return "Retail"; },
        software: function(d) { return "Software"; },
        supportServices: function(d) { return "Support Services"; },
        travel: function(d) { return "Travel"; },
        webApps: function(d) { return "Web Apps"; },
        webHosting: function(d) { return "Web Hosting"; },
        wholesale: function(d) { return "Wholesale"; }
      },
      roleOptions: {
        productManagement: function(d) { return "Product management"; },
        engineering: function(d) { return "Engineering"; },
        design: function(d) { return "Design"; },
        sales: function(d) { return "Sales"; },
        marketing: function(d) { return "Marketing"; },
        customerSupport: function(d) { return "Customer support"; },
        founderCEO: function(d) { return "Founder / CEO"; }
      },
      sizeOptions: {
        size1: function(d) { return "1 – 4 employees"; },
        size5: function(d) { return "5 – 9 employees"; },
        size10: function(d) { return "10 – 49 employees"; },
        size50: function(d) { return "50 – 199 employees"; },
        size200: function(d) { return "200 – 499 employees"; },
        size500: function(d) { return "500 – 999 employees"; },
        size1000: function(d) { return "1,000+ employees"; }
      }
    },
    install: {
      title: function(d) { return "Install Widget"; },
      header: function(d) { return "Install widget on your website:"; },
      description: function(d) { return "Copy the installation code and paste it before &lt;/body&gt; tag on your website:"; },
      emailNote: function(d) { return "Not sure what to do? Send the code to someone who can help you:"; },
      emailLabel: function(d) { return "webmaster@example.com"; },
      emailIsSentNote: function(d) { return "Email with installation code has been sent to " + d.email + "."; },
      getStartedButton: function(d) { return "Get Started"; },
      methodsHeader: function(d) { return "Choose an installation method:"; },
      installationHelp: function(d) { return "Need help?"; },
      installationHelpLink: function(d) { return "https://www.chaport.com/help/installation-on-a-website/install-chaport-on-a-website"; },
      methods: {
        html: function(d) { return "HTML"; },
        wordpress: function(d) { return "WordPress"; },
        joomla: function(d) { return "Joomla"; },
        tagManager: function(d) { return "Google Tag Manager"; }
      }
    },
    profile: {
      title: function(d) { return "Complete Profile"; },
      header: function(d) { return "Please start by completing your profile:"; },
      description1: function(d) { return "Please provide your name and photo (optionally)."; },
      nameLabel: function(d) { return "Full name"; },
      websiteLabel: function(d) { return "Website address"; },
      phoneLabel: function(d) { return "Phone"; }
    },
    welcome: {
      title: function(d) { return "Welcome"; },
      header: function(d) { return "Welcome to Chaport"; },
      description: function(d) { return "Best live chat for websites."; }
    }
  },
  signUp: {
    successTitle: function(d) { return "Thank you!"; },
    successSubtitle: function(d) { return "Please check email to verify your account."; },
    alertEmailResent: function(d) { return "Activation email has been sent, please check your email"; },
    alertInvitationEmailResent: function(d) { return "Invitation sent. Please check your email."; },
    alertActivationEmailSent: function(d) { return "Account activation email has been sent to your email address"; },
    title: function(d) { return "Sign up with Chaport"; },
    errorNameRequired: function(d) { return "Name is required"; },
    errorEmailRequired: function(d) { return "Email is required"; },
    errorEmailInvalid: function(d) { return "Email is not valid"; },
    errorEmailTaken: function(d) { return "A user with this email address is already registered"; },
    errorEmailTakenAndNotActivated: function(d) { return "User with this email address is already registered, email with activation link was sent to this address earlier"; },
    errorPasswordRequired: function(d) { return "Password is required"; },
    errorPasswordInvalid: function(d) { return "Password must be between 6 and 40 characters long"; },
    labelName: function(d) { return "Name"; },
    labelEmail: function(d) { return "Email Address"; },
    labelPassword: function(d) { return "Password"; },
    buttonSubmit: function(d) { return "Sign up"; },
    haveAccount: function(d) { return "Already have an account?"; },
    login: function(d) { return "Log in"; },
    agreeToTerms: function(d) { return "By creating an account you agree to <a href='" + d.termsUrl + "' target='_blank'>Terms and conditions</a> and <a href='" + d.privacyUrl + "' target='_blank'>Privacy Policy</a>"; }
  },
  sounds: {
    beep: function(d) { return "Beep"; },
    beep2: function(d) { return "Beep 2"; },
    drop: function(d) { return "Drop"; },
    glassStick: function(d) { return "Glass stick"; },
    maraca: function(d) { return "Maraca"; },
    maracaLong: function(d) { return "Maraca long"; },
    bellAndBubble: function(d) { return "Bell and bubble"; },
    triplet: function(d) { return "Triplet"; },
    bubble: function(d) { return "Bubble"; },
    wineGlass: function(d) { return "Wine glass"; },
    joy: function(d) { return "Joy"; },
    magic: function(d) { return "Magic"; },
    ios: function(d) { return "iOS"; },
    bellMuted: function(d) { return "Bell muted"; },
    none: function(d) { return "No sound"; }
  },
  status: {
    online: function(d) { return "Online"; },
    "mobile-online": function(d) { return "Online on Mobile"; },
    offline: function(d) { return "Offline"; },
    away: function(d) { return "Away"; },
    invisible: function(d) { return "Invisible"; },
    "off-online": function(d) { return "Waiting for a seat..."; },
    "off-invisible": function(d) { return "Waiting for a seat..."; }
  },
  subscriptions: {
    yourActivePlan: function(d) { return "Your plan: "; },
    yourNextPlan: function(d) { return "Plan – "; },
    yourPlan: function(d) { return "Your plan"; },
    from: function(d) { return "from"; },
    to: function(d) { return "to"; },
    legacyNote: function(d) { return "Archived"; },
    paidOperators: function(d) { return "Paid operators:"; },
    linkAddOperators: function(d) { return "Add operators"; },
    current: function(d) { return "Your current subscription"; },
    currentSubscription: function(d) { return "Current subscription"; },
    noActiveSubscription: function(d) { return "You don't have active subscription plan right now"; },
    trial: function(d) { return "(trial)"; },
    trialEnds: function(d) { return "Trial ends: "; },
    subscriptionStatus: function(d) { return "Subscription status: "; },
    paymentPlan: function(d) { return "Payment plan"; },
    annualPayment: function(d) { return "Annual payment"; },
    monthlyPayment: function(d) { return "Monthly payment"; },
    perMonth: function(d) { return "/mo"; },
    perOperatorPerMonth: function(d) { return "per operator / month"; },
    monthlyDiscount: function(d) { return "Saving " + d.monthlyDiscount + "%"; },
    monthlyDiscountMotivator: function(d) { return "Save " + d.monthlyDiscount + "% with annual payment"; },
    buyNext: function(d) { return "Pay for the next period"; },
    daysLeftCount: function(d) { return "(" + plural(d.daysLeft, 0, en, { "1": "1 day", other: number(d.daysLeft, "daysLeft") + " days" }) + " left)"; },
    validUntil: function(d) { return "Valid until: "; },
    priceFrom: function(d) { return "(from " + d.price + "/month)"; },
    alreadyPaidForNext: function(d) { return "You also paid for a next subscription:"; },
    recurrent: function(d) { return "Your card will be automatically charged at the end of the license term."; },
    updateSubscription: function(d) { return "Update payment method"; },
    cancelSubscription: function(d) { return "Cancel subscription"; },
    contactAdminToUpgrade: function(d) { return "Please contact account administrator to upgrade to " + d.planName + "."; },
    contactAdminToUpdateSubscription: function(d) { return "Please contact account administrator to update the subscription."; },
    productName: function(d) { return "Chaport Pro for " + plural(d.q, 0, en, { "1": "1 operator", other: number(d.q, "q") + " operators" }) + " billed " + select(d.duration, { "1": "monthly", "12": "annually", other: "every " + "#" + " months" }); },
    newProductName: function(d) { return d.fullPlanName + ", billed " + select(d.duration, { "1": "monthly", "12": "annually", other: "every " + "#" + " months" }); },
    newProductNameWithQuantity: function(d) { return d.fullPlanName + " for " + plural(d.q, 0, en, { "1": "1 operator", other: number(d.q, "q") + " operators" }) + ", billed " + select(d.duration, { "1": "monthly", "12": "annually", other: "every " + "#" + " months" }); },
    paymentProcessing: function(d) { return "Thank you for choosing " + d.fullPlanName + " as your subscription plan! Your payment has gone through but has not been processed yet. Generally processing takes no more than a couple of minutes."; },
    alertPaymentProcessed: function(d) { return "Your payment has been successfully processed. Your subscription is now ON!"; },
    updated: function(d) { return "Your subscription has been successfully updated."; },
    canceled: function(d) { return "Your subscription has been successfully canceled."; },
    canceledStatus: function(d) { return "Canceled"; },
    billingCycle: function(d) { return "Billing cycle:"; },
    nextBillingDate: function(d) { return "Next billing date: "; },
    currentSubscriptionHeading: function(d) { return d.fullPlanName + " for " + plural(d.q, 0, en, { "1": "1 operator", other: number(d.q, "q") + " operators" }); },
    currentSubscriptionDetails: function(d) { return d.price + " every " + plural(d.duration, 0, en, { "1": "month", "12": "year", other: number(d.duration, "duration") + " months" }); },
    changePlan: function(d) { return "Change plan"; },
    cancelSubscriptionConfirmation: function(d) { return "Please don't cancel the subscription if you need to change the plan, the number of operators, or the billing cycle. Click on the \"Change plan\" button instead.\n\nAre you sure you want to cancel your subscription?"; },
    contactUs: function(d) { return "Please <a href=\"https://www.chaport.com/contact-us\" target=\"_blank\">contact us</a> to downgrade your plan"; },
    contactUsToUpdateSubscription: function(d) { return "Please <a href=\"https://www.chaport.com/contact-us\" target=\"_blank\">contact us</a> to update your subscription"; },
    contactUsToUpdatePaymentMethod: function(d) { return "Please <a href=\"https://www.chaport.com/contact-us\" target=\"_blank\">contact us</a> to update your payment method"; },
    plansComparisonLink: function(d) { return "Plans comparison →"; },
    subscribeToPlan: function(d) { return "Subscribe to a plan"; },
    upgradePlan: function(d) { return "Upgrade your plan"; },
    choosePlan: function(d) { return "Choose your plan"; },
    paidMonthly: function(d) { return d.price + " when paid monthly"; },
    operatorsDeactivationWarning: function(d) { return "You have " + d.activeOperators + " active operators, " + d.deactivatedOperators + " of them will be deactivated"; },
    coupon: function(d) { return "Get 25% off using this coupon code: CPT25"; },
    unlimitedHistory: function(d) { return "Unlimited"; },
    chatHistory: function(d) { return plural(d.days, 0, en, { "365": "1 year", other: number(d.days, "days") + " days" }); },
    addOperators: {
      title: function(d) { return "Active License Extension"; },
      description: function(d) { return "Specify how many operators you wish to add."; },
      labels: {
        total: function(d) { return "Total amount"; },
        count: function(d) { return "Operators " + "#"; }
      },
      notes: {
        currentLicense: function(d) { return "Your active license for " + plural(d.q, 0, en, { "1": "1 operator", other: number(d.q, "q") + " operators" }) + " is paid up to " + d.validTo + " (" + plural(d.daysLeft, 0, en, { "1": "1 day", other: number(d.daysLeft, "daysLeft") + " days" }) + " left)."; },
        discount: function(d) { return "Discount you received during initial purchase for " + plural(d.duration, 0, en, { "1": "1 month", other: number(d.duration, "duration") + " months" }) + " (" + d.discount + ") is also applied when adding new operators."; },
        perOperatorPrice: function(d) { return "Price per operator: " + d.monthPrice + "/month (" + d.dayPrice + "/day)"; },
        perOperatorTotal: function(d) { return plural(d.payForDays, 0, en, { "1": "1 day", other: number(d.payForDays, "payForDays") + " days" }) + " &times; " + d.dayPrice + " per added operator"; }
      }
    },
    business: {
      fullPlanName: function(d) { return "Chaport Business"; },
      planName: function(d) { return "Business"; }
    },
    changePlanAlerts: {
      success: function(d) { return "Your subscription plan has been successfully changed"; },
      error: function(d) { return "Plan change failed, please try again later"; },
      unableToChargeError: function(d) { return "Payment rejected, please contact your bank or try a different card"; },
      appCancelSubscriptionError: function(d) { return "To cancel your subscription, open the web app in a browser."; }
    },
    comparisonSections: {
      general: function(d) { return "General"; },
      chatWidget: function(d) { return "Chat widget"; },
      leadGeneration: function(d) { return "Lead generation"; },
      messaging: function(d) { return "Messaging"; },
      visitorInfo: function(d) { return "Visitor Info"; },
      operatorProductivity: function(d) { return "Operator productivity"; },
      management: function(d) { return "Management"; },
      reports: function(d) { return "Reports"; },
      support: function(d) { return "Support"; },
      clickToLearn: function(d) { return "Click to learn more"; }
    },
    enterprise: {
      fullPlanName: function(d) { return "Chaport Enterprise"; },
      planName: function(d) { return "Enterprise"; }
    },
    featuresLinks: {
      gdprCompliance: function(d) { return "/gdpr"; },
      faq: function(d) { return "/help/faq/faq"; },
      teams: function(d) { return "/help/operators/teams"; },
      assignmentRules: function(d) { return "/help/receiving-chats/assignment-rules"; },
      multilingualWidget: function(d) { return "/help/general/what-languages-are-supported-by-chaport"; },
      emailRequest: function(d) { return "/help/chat-widget/automatic-email-address-request"; },
      autoInvitations: function(d) { return "/help/auto-invitations/auto-invitations"; },
      prechatForm: function(d) { return "/help/chat-widget/pre-chat-form"; },
      customFields: function(d) { return "/help/visitors/custom-fields"; },
      savedReplies: function(d) { return "/help/messages/saved-replies"; },
      operatorRoles: function(d) { return "/help/operators/operator-roles"; }
    },
    featuresList: {
      history1Year: function(d) { return "1-year chat history"; },
      historyUnlim: function(d) { return "Unlimited chat history"; },
      "60dayChatHistory": function(d) { return "60-day chat history"; },
      chatHistory: function(d) { return "Chat history"; },
      chatsAndWebsites: function(d) { return "Unlimited chats & websites"; },
      apps: function(d) { return "Web, desktop & mobile apps"; },
      encryption: function(d) { return "SSL encryption"; },
      gdprCompliance: function(d) { return "GDPR compliance"; },
      integrations: function(d) { return "Facebook, Viber, Telegram, etc."; },
      api: function(d) { return "REST & JavaScript API"; },
      autoresponder: function(d) { return "Autoresponder"; },
      customBots: function(d) { return "Chatbots"; },
      customBotsPerOperator: function(d) { return "Custom bots <span class='cp-small'>(1000 bot chats / month per operator)</span>"; },
      faq: function(d) { return "Knowledge base + FAQ bot"; },
      teams: function(d) { return "Teams"; },
      assignmentRules: function(d) { return "Assignment rules"; },
      zapier: function(d) { return "Zapier integration"; },
      mobileFriendlyWidget: function(d) { return "Mobile-friendly chat widget"; },
      multilingualWidget: function(d) { return "Multilingual chat widget"; },
      operatorPhotos: function(d) { return "Operator photos"; },
      basicWidgetCustomization: function(d) { return "Basic widget customization"; },
      advancedWidgetCustomization: function(d) { return "Advanced widget customization"; },
      emailRequest: function(d) { return "Email request"; },
      autoInvitations: function(d) { return "Auto-invitations"; },
      prechatForm: function(d) { return "Pre-chat form"; },
      offlineMessages: function(d) { return "Offline messages"; },
      notifications: function(d) { return "Notifications"; },
      groupChats: function(d) { return "Group chats"; },
      fileSending: function(d) { return "File sending"; },
      emoji: function(d) { return "Emoji"; },
      readReceipts: function(d) { return "Read receipts"; },
      messageEditing: function(d) { return "Message editing and deletion"; },
      briefVisitorInfo: function(d) { return "Brief visitor info"; },
      visitorInfoEditing: function(d) { return "Visitor info editing"; },
      detailedVisitorInfo: function(d) { return "Detailed visitor info"; },
      visitorBehavior: function(d) { return "Visitor behavior"; },
      visitorNotes: function(d) { return "Visitor notes"; },
      customFields: function(d) { return "Custom fields"; },
      chatDeletionAndExport: function(d) { return "Chat deletion and export"; },
      search: function(d) { return "Search"; },
      typingInsights: function(d) { return "Typing insights"; },
      visitorBan: function(d) { return "Visitor ban"; },
      chatTranscript: function(d) { return "Chat transcript to email"; },
      savedReplies: function(d) { return "Saved replies"; },
      sharedSavedReplies: function(d) { return "Shared saved replies"; },
      chatRatings: function(d) { return "Chat ratings"; },
      operatorRoles: function(d) { return "Operator roles"; },
      supervision: function(d) { return "Supervision"; },
      workingHours: function(d) { return "Working hours"; },
      statusAutoToggle: function(d) { return "Status auto-toggle"; },
      chatTransfer: function(d) { return "Chat transfer"; },
      automaticChatsTransfer: function(d) { return "Automatic transfer of unanswered chats"; },
      automaticChatsClosing: function(d) { return "Automatic closing of answered chats"; },
      automaticOperatorAssignments: function(d) { return "Automatic operator assignments"; },
      basicReports: function(d) { return "Basic reports"; },
      detailedReports: function(d) { return "Detailed reports"; },
      googleAnalyticsReports: function(d) { return "Google Analytics reports"; },
      advancedReports: function(d) { return "Advanced reports"; },
      onDemandReports: function(d) { return "On-demand reports"; },
      chatAndEmailSupport: function(d) { return "Chat & email support"; },
      prioritizedTechnicalSupport: function(d) { return "Prioritized technical support"; },
      dedicatedAccManager: function(d) { return "Dedicated acc. manager"; },
      productTraining: function(d) { return "Product training"; },
      softwareEngineerSupport: function(d) { return "Software engineer support"; },
      securityAssistance: function(d) { return "Security assistance"; }
    },
    featuresTooltips: {
      gdprCompliance: function(d) { return "Chaport has all the necessary features to let you stay GDPR compliant."; },
      integrations: function(d) { return "Answer questions coming from live chat, Facebook, Telegram, etc., in Chaport."; },
      api: function(d) { return "JavaScript and REST APIs allow you to integrate Chaport with your website and third-party apps more closely."; },
      autoresponder: function(d) { return "Send auto-replies to visitors when your operators are busy or offline."; },
      customBots: function(d) { return "Automate your sales and support. Help your customers 24/7, even when your team is offline."; },
      faq: function(d) { return "Create a Knowledge Base and offer self-service to your customers. Activate an FAQ Bot that will suggest articles based on keywords in your customers’ questions."; },
      teams: function(d) { return "Organize your operators into groups based on their roles, e.g., sales, support, etc."; },
      assignmentRules: function(d) { return "Create rules to automatically assign chats to operators or teams based on visitor info, message text, and other parameters."; },
      zapier: function(d) { return "Integrate Chaport with 4,000+ apps using Zapier."; },
      mobileFriendlyWidget: function(d) { return "Your site visitors can contact you from mobile devices."; },
      multilingualWidget: function(d) { return "The Chaport chat widget automatically switches to a visitor's browser language."; },
      basicWidgetCustomization: function(d) { return "Choose one of the available colors to match your website design."; },
      advancedWidgetCustomization: function(d) { return "Change color, default texts, background, position, and message sound."; },
      emailRequest: function(d) { return "Collect visitors’ emails automatically."; },
      autoInvitations: function(d) { return "Automatic pop-up messages that initiate more chats with website visitors and increase sales."; },
      prechatForm: function(d) { return "Request visitor info before starting a chat."; },
      offlineMessages: function(d) { return "Receive messages when all operators are offline. Send messages to the visitors who left your website."; },
      groupChats: function(d) { return "Invite another operator to a chat or join someone else’s chat to help your customers together."; },
      readReceipts: function(d) { return "Message statuses indicate that the message is sent or read."; },
      briefVisitorInfo: function(d) { return "Visitor name, phone number, and email address."; },
      detailedVisitorInfo: function(d) { return "Visitor language, location, browser, chat start page, the website they came from, and more."; },
      visitorBehavior: function(d) { return "See the pages your visitors are browsing on your website directly in the chat in real time."; },
      visitorNotes: function(d) { return "Leave notes about visitors for future reference."; },
      customFields: function(d) { return "Add custom fields of different types that can be included in a pre-chat form and viewed or changed in the Visitor Info section."; },
      typingInsights: function(d) { return "Read visitor messages even before they are sent, and answer faster."; },
      chatTranscript: function(d) { return "Send a chat transcript to your email address."; },
      savedReplies: function(d) { return "Saved replies (also called canned responses) are answer templates to standard visitors’ questions."; },
      sharedSavedReplies: function(d) { return "Shared saved replies are saved replies that can be shared with all operators."; },
      chatRatings: function(d) { return "Let your visitors rate their chat experience on a five-point scale."; },
      operatorRoles: function(d) { return "An operator in Chaport can assume one of these roles: account owner, administrator, operator."; },
      supervision: function(d) { return "An experienced worker can train new operators by joining their chats, supervising them, and giving advice. A junior operator can also invite a colleague to a chat to get help with a difficult case."; },
      workingHours: function(d) { return "It allows your operators to be displayed Online and receive chats when they are available only on a mobile device."; },
      statusAutoToggle: function(d) { return "Automatically switch your status to Online at the beginning of the day and to Invisible at the end of the day."; },
      chatTransfer: function(d) { return "Transfer a chat to your colleague."; },
      automaticChatsTransfer: function(d) { return "Unanswered chats can be automatically transferred to another operator or marked as “Unassigned” to attract all operators’ attention."; },
      automaticOperatorAssignments: function(d) { return "New chats can be equally distributed among the operators who are online."; },
      basicReports: function(d) { return "Track the total number of chats served and missed in the last 30 days."; },
      detailedReports: function(d) { return "Track the number of served and missed chats broken down by operator and view reports on proactive chats."; },
      googleAnalyticsReports: function(d) { return "View chat events in Google Analytics."; },
      advancedReports: function(d) { return "View reports on chatbots, chat ratings, response times, and operators’ working hours."; },
      onDemandReports: function(d) { return "You can request the reports you need in CSV, JSON, or XLS format."; }
    },
    free: {
      limited: function(d) { return "Limited version"; },
      planName: function(d) { return "Free"; },
      conditions: function(d) { return "2 operator seats, 60-day chat history, limited functionality"; }
    },
    freePre2020: {
      planName: function(d) { return "Free"; },
      conditions: function(d) { return "5 operators, limited functionality"; }
    },
    newLicense: {
      title: function(d) { return "New license"; },
      timeframe: function(d) { return "License will be active from " + d.from + " to " + d.to; },
      optionMonth: function(d) { return plural(d.months, 0, en, { "1": "1 month", other: number(d.months, "months") + " months" }) + " " + plural(d.discount, 0, en, { "0": "", other: "(-" + number(d.discount, "discount") + "%)" }); },
      pricePerOperator: function(d) { return d.price + " per operator per month"; },
      vat: function(d) { return "VAT excluded. Enter your VAT/tax number during checkout to remove VAT from the price."; },
      labels: {
        duration: function(d) { return "Subscription period"; },
        count: function(d) { return "Operator seats"; },
        total: function(d) { return "Total amount"; },
        preview: function(d) { return "Preview"; }
      }
    },
    payment: {
      converted: function(d) { return "You will be charged in " + d.currencyTo + ". " + d.currencyFrom + "/" + d.currencyTo + " = " + d.xrate; },
      goto: function(d) { return "Proceed to payment"; },
      secure: function(d) { return "Secure connection"; },
      title: function(d) { return "Payment"; },
      submit: function(d) { return "Pay"; },
      alerts: {
        success: function(d) { return "Your payment has successfully gone through"; },
        externalError: function(d) { return "Payment failed, please try again later"; },
        "3dSecureRedirect": function(d) { return "Redirecting to your bank to proceed with the payment"; },
        internalError: function(d) { return "Payment failed, please try again later"; },
        serverConnectionError: function(d) { return "Payment failed, please try again later"; }
      },
      labels: {
        card: function(d) { return "Card number"; },
        name: function(d) { return "Cardholder name"; },
        expDate: function(d) { return "Valid thru MM/YY"; }
      }
    },
    plansComparison: {
      title: function(d) { return "Plans comparison"; },
      featuresCaption: function(d) { return "Everything in <b>" + d.planName + "</b> "; },
      plus: function(d) { return "plus:"; },
      choosePlan: function(d) { return "Select " + d.planName; },
      contactsUs: function(d) { return "Contact Us"; },
      "try": function(d) { return "Sign up for free"; },
      andMuchMore: function(d) { return "And much more…"; },
      operatorsInfo: function(d) { return plural(d.q, 0, en, { "1": number(d.q, "q") + " operator", other: number(d.q, "q") + " operators" }); },
      operatorsIncluded: function(d) { return plural(d.q, 0, en, { "1": number(d.q, "q") + " operator", other: number(d.q, "q") + " operators" }) + " included"; },
      unlimitedOperators: function(d) { return "Unlimited operators"; },
      business: {
        description: function(d) { return "Automate sales & support. \nGet more control."; }
      },
      enterprise: {
        description: function(d) { return "Get priority support and employee training."; },
        planCaption: function(d) { return "Individual contract with annual billing"; },
        callRequest: function(d) { return "Contact us"; }
      },
      free: {
        description: function(d) { return "Talk to your customers \nin real time."; }
      },
      premium: {
        description: function(d) { return "Make even more sales.\nIncrease operator efficiency."; }
      },
      pro22: {
        description: function(d) { return "Make even more sales.\nIncrease operator efficiency."; }
      },
      pro23: {
        description: function(d) { return "Make even more sales.\nIncrease operator efficiency."; }
      },
      unlimited: {
        description: function(d) { return "Automate sales & support. \nGet more control."; }
      },
      unlimited23: {
        description: function(d) { return "Automate sales & support. \nGet more control."; }
      }
    },
    premium: {
      fullPlanName: function(d) { return "Chaport Premium"; },
      planName: function(d) { return "Premium"; }
    },
    previewPrice: {
      negativeAmount: function(d) { return "You'll have a credit balance of " + d.creditBalance + " and will be billed " + d.immediatePayment + " on " + d.date + ". Once the credit balance is used up, your recurring billing amount will be " + d.recurringBillingAmount + " every " + plural(d.duration, 0, en, { "1": "month", "12": "year", other: number(d.duration, "duration") + " months" }); },
      positiveAmount: function(d) { return "You'll be billed " + d.immediatePayment + " on " + d.date + " and " + d.recurringBillingAmount + " every " + plural(d.duration, 0, en, { "1": "month", "12": "year", other: number(d.duration, "duration") + " months" }); }
    },
    pro: {
      fullPlanName: function(d) { return "Chaport Professional"; },
      planName: function(d) { return "Professional"; }
    },
    pro22: {
      fullPlanName: function(d) { return "Chaport Pro"; },
      planName: function(d) { return "Pro"; }
    },
    pro23: {
      fullPlanName: function(d) { return "Chaport Pro"; },
      planName: function(d) { return "Pro"; }
    },
    unlimited: {
      fullPlanName: function(d) { return "Chaport Unlimited"; },
      planName: function(d) { return "Unlimited"; }
    },
    unlimited23: {
      fullPlanName: function(d) { return "Chaport Unlimited"; },
      planName: function(d) { return "Unlimited"; }
    }
  },
  teams: {
    newTeam: function(d) { return "New Team"; },
    editTeam: function(d) { return "Edit Team"; },
    deleteTeam: function(d) { return "Delete Team"; },
    setIcon: function(d) { return "Select Icon"; },
    description: function(d) { return "Organize your operators into teams. Assign chats to teams automatically using a pre&" + "#" + "8209;chat&nbsp;form, chatbots, and&nbsp;assignment&nbsp;rules."; },
    newAccessWarning: function(d) { return "To get access to teams, " + d.line + "."; },
    example: function(d) { return "Example"; },
    deleteTeamConfirmation: function(d) { return "Are you sure you want to delete this team?"; },
    alertTeamDeleted: function(d) { return "The team has been successfully deleted."; },
    alertTeamSaved: function(d) { return "The team has been successfully saved."; },
    alertTeamPerOperatorLimitReached: function(d) { return "Operator can't be a member of more than " + plural(d.limit, 0, en, { one: "1 team", other: number(d.limit, "limit") + " teams" }) + "."; },
    alertTeamLimitReached: function(d) { return "Maximum number of teams is " + d.limit + "."; },
    addNewTeam: function(d) { return "+ Add new team"; },
    namePlaceholder: function(d) { return "Team Name"; },
    labelTeamMembers: function(d) { return "Members"; },
    examples: {
      sales: function(d) { return "Sales"; },
      support: function(d) { return "Support"; }
    }
  },
  visitorData: {
    fields: function(d) { return "Visitor Info Fields"; },
    prechat: function(d) { return "Pre-chat Form"; },
    emailRequest: function(d) { return "Email Request"; },
    visitorDataFieldsNote: function(d) { return "You can add custom fields, hide or reorder fields in the visitor info panel."; },
    newVisitorDataFieldsLimitedAccessNote: function(d) { return "You can hide or reorder fields in the visitor info panel. To get access to custom fields, " + d.line + "."; },
    fieldNameLabel: function(d) { return "Name"; },
    fieldKeyLabel: function(d) { return "API Key"; },
    fieldTypeLabel: function(d) { return "Type"; },
    fieldCheckboxTextLabel: function(d) { return "Text"; },
    fieldOptionsLabel: function(d) { return "Options"; },
    fieldHiddenLabel: function(d) { return "Hidden"; },
    fieldRequiredLabel: function(d) { return "Required"; },
    fieldOptionalLabel: function(d) { return "Optional"; },
    fieldInvalidLabel: function(d) { return "Invalid"; },
    addNewField: function(d) { return "+ Add new field"; },
    addNewOption: function(d) { return "+ Add option"; },
    prechatFormFields: function(d) { return "Pre-chat Form Fields"; },
    showPrechatForm: function(d) { return "Show Pre-chat Form"; },
    chooseTeam: function(d) { return "Choose a department"; },
    chooseTeamPostfix: function(d) { return "Team"; },
    newField: function(d) { return "New Field"; },
    editField: function(d) { return "Edit Field"; },
    deleteField: function(d) { return "Delete Field"; },
    selectField: function(d) { return "Choose field..."; },
    duplicateKey: function(d) { return "A field with this API key already exists"; },
    newAccessWarning: function(d) { return "To get access to the visitor info fields, " + d.line + "."; },
    newPrechatAccessWarning: function(d) { return "To get access to the pre-chat form, " + d.line; },
    newCustomFieldsAccessWarning: function(d) { return "To use custom fields, " + d.line + "."; },
    deleteConfirmation: function(d) { return "Are you sure you want to delete this field?"; },
    types: {
      text: function(d) { return "Single-line text"; },
      multilineText: function(d) { return "Multi-line text"; },
      link: function(d) { return "Link"; },
      versionedEntity: function(d) { return "Single-line text"; },
      email: function(d) { return "Email"; },
      choice: function(d) { return "Choice"; },
      checkbox: function(d) { return "Checkbox"; },
      phone: function(d) { return "Phone"; },
      team: function(d) { return "Team"; }
    }
  },
  welcome: {
    welcomeToChaport: function(d) { return "Welcome to Chaport"; },
    goodOldBrag: function(d) { return "Live chat built to be convenient."; },
    agreeToTerms: function(d) { return "By clicking Continue you agree to <a href='" + d.termsUrl + "' target='_blank'>Terms and conditions</a> and <a href='" + d.privacyUrl + "' target='_blank'>Privacy Policy</a>."; },
    "continue": function(d) { return "Continue"; }
  },
  widget: {
    messageEdited: function(d) { return "Edited"; },
    messageSent: function(d) { return "Sending..."; },
    messageRead: function(d) { return "Read"; },
    messageDelivered: function(d) { return "Sent. Unread"; },
    currentlyOnlineText: function(d) { return "We are online and ready to help!"; },
    recentlyActiveText: function(d) { return "Send us a message. We will reply as soon as we can!"; },
    currentlyOnline: function(d) { return "Online"; },
    lastActiveInMinutes: function(d) { return "Last active less than " + plural(d.minutes, 0, en, { "1": "1 minute", other: number(d.minutes, "minutes") + " minutes" }) + " ago"; },
    lastActiveInHours: function(d) { return "Last active less than " + plural(d.hours, 0, en, { "1": "1 hour", other: number(d.hours, "hours") + " hours" }) + " ago"; },
    lastActiveRecently: function(d) { return "Last active recently"; },
    inputLabel: function(d) { return "Type a message here..."; },
    chatLabel: function(d) { return "Live Chat"; },
    cancelLabel: function(d) { return "Cancel"; },
    emailRequestText: function(d) { return "Get notified of a reply here and via email:"; },
    emailDefinedText: function(d) { return "You will be notified of a reply here and by email:"; },
    emailRequestEdit: function(d) { return "edit"; },
    emailRequestEmailRequired: function(d) { return "Please enter your email address."; },
    emailRequestEmailInvalid: function(d) { return "This does not look like email address."; },
    rateRequestText: function(d) { return "Rate your conversation:"; },
    acceptPrivacyPolicy: function(d) { return "I agree to"; },
    acceptPrivacyPolicyLinkText: function(d) { return "Privacy Policy"; },
    privacyPolicyShouldBeAccepted: function(d) { return "You have to accept Privacy Policy"; },
    conversationDeleted: function(d) { return "This chat has been deleted by an operator."; },
    refreshToStartNewConversation: function(d) { return "Refresh the page to start a new chat."; },
    joined: function(d) { return "joined"; },
    teamTitleDefault: function(d) { return "Customer Support"; },
    poweredBy: function(d) { return "Powered by"; },
    autoresponder: {
      defaultFirstMessageOnlineText: function(d) { return "Thanks for reaching out! One of our operators will be with you shortly."; },
      defaultFirstMessageOfflineText: function(d) { return "Thanks for reaching out! We're currently offline, but we got your message and will reply to you as soon as possible."; },
      defaultWaitingMessageText: function(d) { return "Sorry, all our operators are busy right now. Please hold on, we'll be with you shortly."; }
    },
    consent: {
      yesPlease: function(d) { return "Yes, please"; },
      noThanks: function(d) { return "No, thanks"; },
      chooseOption: function(d) { return "Please answer the question:"; },
      gdprInformDefaultText: function(d) { return "We use provided personal data for support purposes only"; },
      marketingPermissionDefaultText: function(d) { return "Would you like to hear about our offers and services?"; },
      personalData: function(d) { return "Personal Data"; }
    },
    ratings: {
      "1": function(d) { return "Terrible"; },
      "2": function(d) { return "Bad"; },
      "3": function(d) { return "Average"; },
      "4": function(d) { return "Good"; },
      "5": function(d) { return "Excellent"; }
    }
  },
  widgetDummy: {
    today: function(d) { return "Today"; },
    operatorName: function(d) { return "Jessica Parker"; },
    jobTitle: function(d) { return "Consultant"; },
    visitorMessage0: function(d) { return "Hello!"; },
    visitorMessage0Time: function(d) { return "10:01"; },
    visitorMessage1: function(d) { return "Do you have available iPhone 6S 128gb?"; },
    visitorMessage1Time: function(d) { return "10:01"; },
    operatorMessage1: function(d) { return "Yes, we have this model in stock"; },
    operatorMessage1Time: function(d) { return "10:02"; },
    visitorMessage2: function(d) { return "Thanks! I'll take two! 😀"; },
    visitorMessage2Time: function(d) { return "10:03"; }
  },
  widgetStates: {
    collapsed: function(d) { return "Closed"; },
    expanded: function(d) { return "Open"; }
  }
}
;
